
* @basic
** [#C] @basic: @gitlib: path-to, @bitlib: git-to, is for org files,  [2015-12-24]
   1. init.el must be separate [2015-12-25]
#+BEGIN_SRC emacs-lisp :tangle yes :reports no 
  ; Time-stamp: "xiaoanh 2016/03/11 14:40:53"
   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;       
  ; @dir,  "D:/gitlib/orglib/emacslib/" ->  "D:/gitlib/emacslib/" ;  be careful of org-link-abbrev-alist, [2016-01-18]
                                          ; @gitlib: path-to
            ;; check OS type
            (cond
             ((string-equal system-type "windows-nt") ; Microsoft Windows
              (and (progn
                (concat (message "Microsoft Windows: ") (setq path-to "D:/gitlib/emacslib/")) ) 
                    (progn  
                    (concat (message "Microsoft Windows: ") (setq git-to "D:/bitlib/orglib/")) )))
          ; @bitlib: git-to, is for org files
             ((string-equal system-type "darwin") ; Mac OS X
              (and (progn   
                  (concat (message "Mac OS X") (setq path-to "/Volumes/xiaoanh/gitlib/emacslib/")))
             (progn
            (concat (message "Mac OS X") (setq git-to "/Volumes/xiaoanh/bitlib/orglib/")))) )

             ((string-equal system-type "gnu/linux") ; linux
              (progn
                (message "Linux"))))
          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

                ;;; init.el --- Where all the magic begins
                ;;
                ;; This file loads Org-mode and then loads the rest of our Emacs initialization from Emacs lisp
                ;; embedded in literate Org-mode files.
                
                ;; Load up Org Mode and (now included) Org Babel for elisp embedded in Org Mode files
                ; (setq dotfiles-dir (file-name-directory (or (buffer-file-name) load-file-name)))
                ; (setq org-dir (expand-file-name "lisp" (expand-file-name "org-mode-master" dotfiles-dir)))
                ; (setq org-contrib-dir (expand-file-name "lisp" (expand-file-name "contrib" org-dir)))
          ;      (setq dotfiles-dir path-to)
                (defvar org-dir (expand-file-name "lisp" (expand-file-name "org-mode-master" path-to)))
                (defvar org-contrib-dir (expand-file-name "lisp" (expand-file-name "contrib"  (expand-file-name "org-mode-master" path-to)))) 
               ; @key: contrib dir @err, [2016-01-04]
               ; (setq org-contrib-dir (expand-file-name "lisp" (expand-file-name "contrib" org-dir)))
            
                  ;; load up Org-mode and Org-babel
      ;          (require 'org)
                (require 'org-install)
                (require 'ob-tangle)

  ; (setq initial-user-file (concat path-to "dotemacsw.el"))

                ;; load up all literate org-mode files in this directory
      ;          (mapc #'org-babel-load-file (directory-files path-to t "\\.org$"))

                ;; (global-auto-revert-mode -1)
                ;; (global-set-key (kbd "C-c i")
                ;;           (lambda() (interactive) (org-babel-load-file (concat path-to "dotemacswrg.org"))))
                                          ; (expand-file-name ".." path-to)
                                          ; DONE [2016-01-07]
                                          ; @mac, @key: ln -s /Volumes/xiaoanh/gitlib/dotemacsw.el ~/.emacs.el
  (setq initial-user-file (concat (expand-file-name "../" path-to) "dotemacsw.el"))
   (global-set-key (kbd "C-c i")
                          (lambda() (interactive) (org-babel-load-file (concat  (expand-file-name "../" path-to)  "dotemacswrg.org"))))
                ; @ln: http://uwabami.junkhub.org/log/?date=20111213
                ;; (defun my:load-org-file (file)
                ;;      "load org file"
                ;;     (org-babel-load-file  (concat path-to file)))
                ;;  (my:load-org-file "dotemacsw.org")

                                          ;   (org-babel-load-file (concat path-to "dotemacsw.org"))

                ;;; init.el ends here
                
#+END_SRC
** @basic: @custom: 
#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                          ; @mac, @setenv, [2016-01-07]
  (cond
   ((string-equal system-type "darwin") ; Mac OS X
    (and (setq texlive-root "/usr/texbin:")
    (setq path "/bin:/usr/bin:/usr/local/bin:/usr/bin:/usr/local/texlive/2013/bin/x86_64-darwin:/usr/local/cellar/ghostscript/9.07/bin:")
    (setenv "PATH" path))))

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
   ;; font. m-x just once, support CHN, /141104
    (set-locale-environment "English")
    ; @key, DONE [2015-08-07]
    (set-language-environment "utf-8")
    (set-terminal-coding-system 'utf-8)
    (set-keyboard-coding-system 'utf-8)
    (prefer-coding-system 'utf-8)
    
    ;; Face set-faces, [2014-10-23]
    (custom-set-faces
     ;; custom-set-faces was added by Custom.
     ;; If you edit it by hand, you could mess it up, so be careful.
     ;; Your init file should contain only one such instance.
     ;; If there is more than one, they won't work right.
     '(default ((t (:inherit nil :stipple nil :background "Black" :foreground "gray85" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 120 :width normal :foundry "apple" :family "Menlo")))))
    (put 'upcase-region 'disabled nil)
  (put 'downcase-region 'disabled nil)

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  

  (custom-set-variables
   ;; custom-set-variables was added by Custom.
   ;; If you edit it by hand, you could mess it up, so be careful.
   ;; Your init file should contain only one such instance.
   ;; If there is more than one, they won't work right.
   '(elfeed-db-directory (concat path-to "elfeed_db"))
   '(elfeed-feeds (quote ("youtube.com" "http://nullprogram.com/feed/" "http://www.terminally-incoherent.com/blog/feed/")))
    '(org-agenda-files (list (concat git-to "paper.org") (concat git-to "study.org") (concat git-to "journal.org") (concat git-to "project.org") (concat git-to "task.org") (concat git-to  "note.org")))
  ;  '(org-agenda-files (quote ("d:/bitlib/orglib/paper.org" "d:/bitlib/orglib/study.org" "d:/bitlib/orglib/journal.org" "d:/bitlib/orglib/project.org" "d:/bitlib/orglib/task.org" "d:/bitlib/orglib/note.org")))
  ; '(session-use-package t nil (session))
   '(show-paren-mode t)
   '(text-mode-hook (quote (turn-on-auto-fill text-mode-hook-identify)))
   '(truncate-partial-width-windows nil)
   '(user-full-name "xiaoanh"))
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
#+END_SRC
** @basic: @kbd
*** @kbd @mac, v24.5.1[2016-01-03 Sun]
#+BEGIN_SRC emacs-lisp :tangle yes
  ; @win, http://mirror.hust.edu.cn/gnu/emacs/
  ; invalid function: add-function for (helm-mode 1), [2016-01-03]
  ; mac-control, mac-command, mac-option
  ; mac-command-modifier is a variable defined in `C source code'.
  ; Its value is alt
  ; Original value was meta
 (cond 
 ((string-equal system-type "darwin" )
 (and (setq mac-option-modifier 'meta)
 (setq mac-command-modifier 'ctrl))))

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; @mac, ctrl [2015-12-25]
   ;  (setq mac-command-modifier 'alt)
   ;  (setq mac-command-modifier 'ctrl)
   ; (define-key global-map [?\M-Â¥] "\\")
   
   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  ; comment-region, nice /141117.
  (global-set-key (kbd "C-c C-/") 'comment-region)
  (global-set-key (kbd "C-c C-/") 'uncomment-region)
  (global-set-key [?\C-c ?\C-/] 'comment-or-uncomment-region)
  
  (global-set-key "\C-cl" 'org-store-link)
  (global-set-key "\C-cc" 'org-capture)
  (global-set-key "\C-ca" 'org-agenda)
  (global-set-key "\C-cb" 'org-iswitchb)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

*** @basic: time-stamp, [2014-11-06]
#+BEGIN_SRC emacs-lisp :tangle yes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; @basic: time-stamp, [2014-11-06]
(add-hook 'write-file-hooks 'time-stamp)
(setq time-stamp-format "%:u %04y/%02m/%02d %02H:%02M:%02S")
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
*** @defun: insert-date
#+BEGIN_SRC emacs-lisp :tangle yes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; @defun insert-date
(defun insert-date (prefix)
    "Insert the current date. With prefix-argument, use ISO format. With
   two prefix arguments, write out the day and month name."
    (interactive "P")
    (let ((format (cond
;	     ((not prefix) "%Y-%m-%d")
                   ((not prefix) "[%Y-%m-%d]")
                   ((equal prefix '(4)) "%d.%m.%Y")
                   ((equal prefix '(16)) "%A, %d. %B %Y")))
          (system-time-locale "de_DE"))
      (insert (format-time-string format))))
(global-set-key (kbd "C-c d") 'insert-date)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

* @other
** @cs, [2016-02-29]
#+BEGIN_SRC emacs-lisp :tangle yes 
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  (add-to-list 'load-path (concat path-to "csharp-mode-master/"))
  (require 'csharp-mode)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC 

** @yas, [2016-02-23]
   1. https://github.com/capitaomorte/yasnippet
   2. yas/choose-value
   3. YASnippet (Yet Another Snippet)
   4. is inspired from [TextMate's][textmate-snippets] syntax
#+BEGIN_SRC emacs-lisp :tangle yes 
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  (add-to-list 'load-path (concat path-to "yasnippet-master/"))
  (require 'yasnippet)
  (yas-global-mode 1)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC 
** @ditaa, @plantuml and @graphviz [2016-02-03]
    1. PlantUMLçç¨æ³è¿æ¯æ¯è¾ç®åçï¼é¦åå®è£å¥½ Graphviz
       1. http://www.graphviz.org/Download_windows.php
    2. @ditaa
       1. http://sourceforge.net/projects/ditaa/
    3. @gnuwin, windowsçæ¬çEmacs æ æ³æ¾ç¤ºå¾ççè§£å³æ¹æ³
       1. http://gnuwin32.sourceforge.net/packages.html
       2. Win çä¸è½æ¾ç¤ºå¾çæ¯å ä¸ºç¼è¯åé»è®¤æ²¡æå¸¦å ä¸ªDLLæä»¶
       3. å¦å¤ä¸ä¸ªæ¯è¾å¿«çæ¹æ³äºå¨
	  1. https://code.google.com/archive/p/emacs-for-windows/downloads

#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                          ; *** @ditaa, REDO [2016-02-03], [2015-07-02]
  ; Ditaa is distributed with Org mode. The file ditaa.jar can be found in contrib/scripts. 
  (setq org-ditaa-jar-path (concat path-to  "org-mode-master/contrib/scripts/ditaa.jar") )
  ; (setq org-ditaa-jar-path (concat path-to "plugins/ditaa0_9.jar") )
  ; (setq org-plantuml-jar-path "~/java/plantuml.jar")
  (add-hook 'org-babel-after-execute-hook 'org-display-inline-images 'append)
  (org-babel-do-load-languages 'org-babel-load-languages '((ditaa . t) (dot . t))) 
  ; this line activates ditaa
  ; can not find ditaa.jar can be found in contrib/scripts
  ; C:\Users\xiaoanh\Downloads\Emacs24.3\lisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
#+END_SRC
# #+BEGIN_SRC ditaa :file orgblog/img/hello-world.png
#+BEGIN_SRC ditaa :file hello-world.png
 Hello World!
#+END_SRC

#+BEGIN_SRC lisp
  (image-type-available-p 'png)
  (image-type-available-p 'jpeg)
  (image-type-available-p 'tiff)
#+END_SRC

** Taskjuggler [2016-02-01 Mon]
   1. http://orgmode.org/worg/org-tutorials/org-taskjuggler.html
   2. C-c C-c taskjuggler_project RET
   3. M-x org-export-as-taskjuggler-and-open
*** install ruby, ruby-v2.2.3, C:/ruby22
      1. https://lujianmei.gitbooks.io/taskjuggler-manage-projects/content/Install_taskjuggler.html
#+BEGIN_SRC emacs-lisp :tangle no
  ; org-contrib-dir
  (require 'ox-taskjuggler)
#+END_SRC

** @python, @win: C:\Program Files\Python35\, [2016-01-20]
   1. @cmd, not included 
#+BEGIN_SRC emacs-lisp :tangle no
  (add-to-list 'exec-path "C:/Program Files/Python35/")
#+END_SRC
** graphviz-dot-mode-master
   1. https://github.com/ppareit/graphviz-dot-mode
   2. Graphviz ï¼è±æï¼Graph Visualization Softwareçç¼©åï¼, @Bell-Labs
#+BEGIN_SRC emacs-lisp :tangle yes
(load-file  (concat path-to "graphviz-dot-mode-master/graphviz-dot-mode.el") )
#+END_SRC
#+BEGIN_SRC dot :file D: figure1411/test-dot.png :cmdline -Kdot -Tpng
#+END_SRC
** @helm, (helm-mode 1), should make @mac, fail, delete @anything [2015-12-25]
#+BEGIN_SRC emacs-lisp :tangle yes
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; @anything to @helm [2015-12-25]
    ; https://github.com/emacs-helm/helm
  ;; [Facultative] Only if you have installed async.
    (add-to-list 'load-path (concat path-to "helm-master/"))
  ;  (package-install 'helm)
  ; "Cannot open load file" "helm-autoloads [2015-12-25]
  ; @success, @mac after make [2015-12-25] 
    (require 'helm-config)
    (global-set-key (kbd "C-c h") 'helm-mini)
  ; (helm-mode 1)
  ; invalid function: add-function for (helm-mode 1), [2016-01-03]

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; ** @kbd,  [2016-01-07]
  (global-set-key "\C-x\C-b" 'helm-buffers-list) 
      ; cancel bs [2015-12-30]
      ; (global-set-key "\C-x\C-b" 'bs-show) 
         ;; or another key
      ; (global-set-key "\M-p"  'bs-cycle-previous)
      ; (global-set-key "\M-n"  'bs-cycle-next)

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
** [#C] @company, =(company-mode 1)=, @completion, fuzzy mode
#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; DONE http://company-mode.github.io/, [2016-01-18]
  ; @company to replace ac,  begin here [2015-12-31]
  ; company-mode replace auto-complete. 
  (add-to-list 'load-path (concat path-to "company-mode-master/"))
  (require 'company)
  (company-mode 1)
  (add-hook 'after-init-hook 'global-company-mode)
                                          ; @company end here
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

** @helm-company, [2016-01-18]
#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;                                  
; Requirements: Helm   and company-mode
 ; https://github.com/yasuyk/helm-company
  (add-to-list 'load-path  (concat path-to "helm-company-master/"))  
  (autoload 'helm-company "helm-company")
  ;; Not necessary if using ELPA package
  (eval-after-load 'company
    '(progn
       (define-key company-mode-map (kbd "C-:") 'helm-company)
       (define-key company-active-map (kbd "C-:") 'helm-company)))
   ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

** [#C] @ac, @completion
   1. add log4e, yaxception, auto-complete-pcmp and org-ac in github [2016-01-28 Thu]
#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; must add yaxception, log4e, auto-complete-pcmp and org-ac in auto-complete-master dir, [2016-01-20]
  ;; auto-complete, [2014-11-06]
  (add-to-list 'load-path (concat path-to "auto-complete-master/"))
  ; (add-to-list 'load-path (concat path-to "auto-complete-master"))
  ; (add-to-list 'ac-dictionary-directories "D:/dotemacsw/auto-complete-master/ac-dict")
  (require 'auto-complete)
  (require 'auto-complete-config)
  (require 'log4e)
  (require 'yaxception)
  (require 'auto-complete-pcmp)
  (require 'org-ac)
  ;; missing auto-complete-pcmp, https://github.com/aki2o/auto-complete-pcmp
  ;; Make config suit for you. About the config item, eval the following sexp.
  ;; (customize-group "org-ac")
  (org-ac/config-default)

  (ac-config-default)
  (add-to-list 'ac-dictionary-directories (concat path-to "auto-complete-master/ac-dict"))
  (auto-complete-mode 1) 

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
*** @ac, ac-ispell, =(flyspell-mode 1)= [2016-01-18]
#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; @win
  (if (string-equal system-type "windows-nt")
  (and (progn (add-to-list 'exec-path "C:/Program Files (x86)/Aspell/bin"))
  (setq-default ispell-program-name "aspell")
  (progn (setq ispell-personal-dictionary "C:/Program Files (x86)/Aspell/dict"))))

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; @mac, [2015-12-28]
  (if (string-equal system-type "darwin")
  (and (setq ispell-program-name "/usr/local/bin/ispell")
  (setq-default ispell-program-name "/usr/local/bin/aspell")))

  ; @seamless, for both 
  (require 'ispell)
  (setq text-mode-hook '(lambda()  (flyspell-mode t)  ) )
  (add-hook 'LaTeX-mode-hook 'flyspell-mode)
  (ispell-minor-mode) 
  ; @flyspell, [2016-01-18]
  (flyspell-mode 1)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
*** @ac, first ispell, then ac-ispell [2015-12-28]
#+BEGIN_SRC emacs-lisp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(add-to-list 'load-path (concat path-to "auto-complete-master/"))
; (add-to-list 'load-path "D:/dotemacsw/auto-complete-master/")
(require 'ac-ispell)
(eval-after-load "auto-complete" '(progn (ac-ispell-setup)))
(add-hook 'git-commit-mode-hook 'ac-ispell-ac-setup)
(add-hook 'mail-mode-hook 'ac-ispell-ac-setup)

; error enabling flyspell mode, ispell-set-spellcheker, /141106
(setq flyspell-issue-welcome-flag nil)
;; fix flyspell problem
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
** @org-ac, [2016-01-19], Dependency:  yaxception.el, popup.el, fuzzy. el and log4e.el, @aki2o
  #+BEGIN_SRC emacs-lisp :tangle no
     ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                            ;  https://github.com/aki2o/org-ac
                                            ;  Hiroaki Otsu aki2o
                                            ; @err: Cannot open load file: no such file or directory, auto-complete-pcmp
                                            ; https://github.com/aki2o/auto-complete-pcmp
                                            ; provide the functions of auto-complete for handling Programmable Completion.

    ; Tested On  auto-complete-pcmp.el â¦ 0.0.1 and log4e.el â¦ 0.2.0
    (add-to-list 'load-path (concat path-to "org-ac-master/"))
    (require 'org-ac)
    ;; Make config suit for you. About the config item, eval the following sexp.
    ;; (customize-group "org-ac")
    ; (org-ac/config-default)

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  #+END_SRC

** @org-publish, [2016-01-08]
#+BEGIN_SRC emacs-lisp :tangle yes
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                          ; @org-publish, [2016-01-08]
          ; @err, org-publish-org-to-html is void
                                          ; http://comments.gmane.org/gmane.emacs.orgmode/76412

                                          ; http://dayigu.github.io/WhyUseOrgModeToWriteBlog.html
                                          ; @github, [2016-01-08]
                                          ; create orgblog and xiaoanh.github.com dir, [2016-01-08]
  ;(setq path-orgblog  (concat (expand-file-name "../" path-to) "orgblog"))
  ;(setq path-orgpublish  (concat (expand-file-name "../" path-to) "xiaoanh.github.io"))
  (require 'org)
  (require 'ox)
  (require 'ox-publish)
                                          ; (require 'org-publish)
                                          ; (list path-orgblog)
                                          ;  "org-publish", which belongs to the old framework.
                                          ;  try requiring  "ox-publish" instead.
                                          ; replacing "org-publish-org-to-html" by "org-html-publish-to-html" into my .emacs.

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                          ;  MS
  (cond
   ((string-equal system-type "windows-nt")  ; MS
  (setq org-publish-project-alist
        '(
          ("blog-notes"
  ;         :base-directory "~/org/blog/"
                                          ;         :base-directory  path-orgblog
           :base-directory  "D:/gitlib/orgblog"     
  ;         :base-directory  "D:/gitlib/orglib/orgblog"     
           :base-extension "org"
  ;         :publishing-directory "~/org/dayigu.github.com/"
           :publishing-directory "D:/weblib"
  ;         :publishing-directory "/ssh:xiaoanh@github.com: D:/gitlib/orglib/xiaoanh.github.io"
           :recursive t
                                          ;         :publishing-function org-publish-org-to-html
           :publishing-function org-html-publish-to-html   
           :headline-levels 4
           :section-numbers nil
           :auto-preamble t
           :auto-sitemap t                ; Generate sitemap.org automagically...
           :sitemap-filename "sitemap.org"  ; ... call it sitemap.org (it's the default)...
           :sitemap-title "Sitemap"         ; ... with title 'Sitemap'.
           :author "xiaoanh"
  ;         :email "dayigu at gmail dot com"
            :style    "<link rel=\"stylesheet\" type=\"text/css\" href=\"css/solarized-light.css\"/>"
           :sitemap-sort-files anti-chronologically
           :sitemap-file-entry-format "%d %t"
           )
          ("blog-static"
  ;         :base-directory "~/org/blog/"
           :base-directory "D:/gitlib/orgblog"
           :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|ogg\\|swf"
                                          ;         :publishing-directory "~/org/dayigu.github.com/"
  ;         :publishing-directory "/ssh:xiaoanh@github.com:  D:/gitlib/orglib/xiaoanh.github.io"
           :publishing-directory "D:/weblib"
           :recursive t
           :publishing-function org-publish-attachment
           )
          ("blog" :components ("blog-notes" "blog-static"))
          ;;
          ))))
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; Mac OS X
  (cond
   ((string-equal system-type "darwin")  ; Mac OS X
  (setq org-publish-project-alist
        '(
          ("blog-notes"
  ;         :base-directory "~/org/blog/"
                                          ;         :base-directory  path-orgblog
           :base-directory  "/Volumes/xiaoanh/gitlib/orgblog"     
  ;         :base-directory  "/Volumes/xiaoanh/gitlib/orglib/orgblog"     
           :base-extension "org"
  ;         :publishing-directory "/ssh:xiaoanh@github.com: /Volumes/xiaoanh/gitlib/orglib/xiaoanh.github.io"
           :publishing-directory "/Volumes/xiaoanh/weblib"
  ;         :publishing-directory "/Volumes/xiaoanh/gitlib/orglib/xiaoanh.github.io"        
  ;         :publishing-directory "/ssh:xiaoanh@github.com: D:/gitlib/orglib/orghtml"
           :recursive t
                                          ;         :publishing-function org-publish-org-to-html
           :publishing-function org-html-publish-to-html   
           :headline-levels 4
           :section-numbers nil
           :auto-preamble t
           :auto-sitemap t                ; Generate sitemap.org automagically...
           :sitemap-filename "sitemap.org"  ; ... call it sitemap.org (it's the default)...
           :sitemap-title "Sitemap"         ; ... with title 'Sitemap'.
           :author "xiaoanh"
  ;         :email "dayigu at gmail dot com"
           :style    "<link rel=\"stylesheet\" type=\"text/css\" href=\"css/solarized-light.css\"/>"
           )
          ("blog-static"
  ;         :base-directory "~/org/blog/"
           :base-directory "/Volumes/xiaoanh/gitlib/orgblog"
  ;         :base-directory "/Volumes/xiaoanh/gitlib/orglib/orgblog"
           :base-extension "css\\|js\\|png\\|jpg\\|gif\\|pdf\\|mp3\\|ogg\\|swf"
                                          ;         :publishing-directory "~/org/dayigu.github.com/"
  ;         :publishing-directory "/ssh:xiaoanh@github.com:  /Volumes/xiaoanh/gitlib/orglib/xiaoanh.github.io"
           :publishing-directory "/Volumes/xiaoanh/weblib"
  ;         :publishing-directory "/Volumes/xiaoanh/gitlib/orglib/xiaoanh.github.io"        
  ;         :publishing-directory "D:/gitlib/orglib/xiaoanh.github.io"        
           :recursive t
           :publishing-function org-publish-attachment
           )
          ("blog" :components ("blog-notes" "blog-static"))
          ;;
          ))))
                                          ; M-x org-publish-project RET blog RET
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; setting, [2016-01-28]
                                          ; @key: postamble, [2016-01-18]
  (setq org-export-html-postamble nil)

                                          ; http://stackoverflow.com/questions/12052013/beautiful-websites-using-emacss-org-mode
                                          ; [2016-01-28]

   (setq org-export-html-style-include-scripts nil
         org-export-html-style-include-default nil)
   (setq org-export-html-style
         "<link rel=\"stylesheet\" type=\"text/css\" href=\"css/solarized-light.css\" />")

  (setq org-export-html-postamble-format 
        '(("en" "<p class=\"postamble\">Last Updated %d. Created by %c</p>")))

    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

#+RESULTS:
** @markdown [2016-01-08]
   1. markdownæä¸»è¦çç¨éå¯è½å°±æ¯blogäº
   2. markdown-preview-eww,
      1. https://github.com/niku/markdown-preview-eww
#+BEGIN_SRC emacs-lisp :tangle yes
                                          ; MD, [2015-02-13]
                                          ; https://github.com/niku/markdown-preview-eww

    (add-to-list 'load-path (concat path-to "markdown-mode/"))  
  ;  (add-to-list 'load-path  path-to)  
    (autoload 'markdown-mode "markdown-mode"   "Major mode for editing Markdown files" t)
    (add-to-list 'auto-mode-alist '("\\.text\\'" . markdown-mode))
    (add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))
    (add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))
  (require 'markdown-preview-eww)
  ; How to use, install redcarpet from gem % gem install redcarpet

#+END_SRC
** @weather, [2016-01-22]
   1. https://github.com/lujun9972/yahoo-weather-mode
#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  (add-to-list 'load-path (concat path-to "yahoo-weather-mode-master/") )
                                          ; https://github.com/lujun9972/yahoo-weather-mode
  (require 'yahoo-weather)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


#+END_SRC
** @pandoc
*** é»é­æ³å©å¨pandoc, [2016-01-12]
    1. å¦æä½ éè¦ææä»¶ä»ä¸ç§æ è®°è¯­è¨æ ¼å¼è½¬æ¢å°å¦ä¸ç§æ ¼å¼ï¼pandocä¼æ¯ä½ ççå£«åå
** @pomodoro, @org-timer
#+BEGIN_SRC emacs-lisp :tangle yes
      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
                                          ; @ln : http://orgmode.org/worg/org-gtd-etc.html, [2016-01-12]
                                          ; pomodoro, which means tomato.
                                          ; Activate the org-timer module :
  (add-to-list 'org-modules 'org-timer)
  ; Set a default value for the timer, for example :
  (setq org-timer-default-timer 25)
  ;; Modify the org-clock-in so that a timer is started with the default
  ;; value except if a timer is already started :
  (add-hook 'org-clock-in-hook (lambda ()
        (if (not org-timer-current-timer) 
        (org-timer-set-timer '(16)))))
      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
** @helm-bibtex-master, dash first
#+BEGIN_SRC emacs-lisp :tangle yes
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;;  @helm, helm-bibtex
    ; @err, can not load parsebib
    ; @success, Cannot open load file -> (add-to-list âload-path â/Users/user_name/bin/â)
    ; ;; Requirements are parsebib, helm, s, dash, and f.  The easiest way
    ; *** @parsebib @google, https://github.com/joostkremers/parsebib, @Preamble, @String, or @Comment
    ; https://github.com/tmalsburg/helm-bibtex
    ; *** @dash can not load parsebib
    ; https://github.com/magnars/dash.el
    ; *** @s can not load s and f
    ; https://github.com/magnars/s.el
    ; https://github.com/rejeep/f.el
    ; *** @success, parsebib, dash, s and f finally
    (add-to-list 'load-path (concat path-to "dash.el-master/"))
    (require 'dash) 
    (add-to-list 'load-path (concat path-to "s.el-master/"))
    (require 's)
    (add-to-list 'load-path (concat path-to "f.el-master/"))
    (require 'f)
    ; A modern list library for Emacs 
    ; All functions and constructs in the library are prefixed with a dash (-).
    
    (add-to-list 'load-path (concat path-to "parsebib-master/"))
    (require 'parsebib)
    (add-to-list 'load-path (concat path-to "helm-bibtex-master/"))
    (autoload 'helm-bibtex "helm-bibtex" "" t)
    ; (setq helm-bibtex-bibliography '("/path/to/bibtex-file-1.bib" "/path/to/bibtex-file-2.bib"))
    ; helm-bibtex, bitlib->gitlib [2015-12-28]
    (setq helm-bibtex-bibliography (list (concat path-to "bib1410.bib") (concat path-to "bib1505.bib") (concat path-to "bib1506.bib") ))
;    (setq helm-bibtex-bibliography '( (concat path-to "bib1410.bib") (concat path-to "bib1505.bib") (concat path-to "bib1506.bib") ))
  ;  (setq helm-bibtex-bibliography '("D:/gitlib/bib1410.bib" "D:/gitlib/bib1505.bib" "D:/gitlib/bib1506.bib" ))
  ;  (setq helm-bibtex-bibliography '("D:/gitlib/orglib/bib1410.bib" "D:/gitlib/orglib/bib1505.bib" "D:/gitlib/orglib/bib1506.bib" ))
    ; (setq helm-bibtex-bibliography '("D:/bitlib/orglib/bib1410.bib" "D:/bitlib/orglib/bib1505.bib" "D:/bitlib/orglib/bib1506.bib" ))
 
    (setq helm-bibtex-library-path (list (concat git-to "paper1512/") ))    
;    (setq helm-bibtex-library-path (concat git-to "paper1512/") )    
;    (setq helm-bibtex-library-path "D:/bitlib/orglib/paper1512/" )
    ; (setq helm-bibtex-library-path '("/path1/to/pdfs" "/path2/to/pdfs"))
    ; (setq helm-bibtex-notes-path "/path/to/notes.org")
    (setq helm-bibtex-notes-path "D:/gitlib/bib_notes.org")
    (setq helm-bibtex-pdf-symbol "â")
    (setq helm-bibtex-notes-symbol "â")
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
** @guide-key
#+BEGIN_SRC emacs-lisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; https://github.com/kai2nenobu/guide-key
  ; @guide-key begin here
  
  ; @guide-key end here
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
** @use-package [2015-12-31]
#+BEGIN_SRC emacs-lisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; @use-package begin here [2015-12-31]
  ; https://github.com/jwiegley/use-package
  (add-to-list 'load-path (concat path-to "use-package-master/"))
; (require 'use-package)
  ; @use-package end here
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
** TODO @magit, v24.5 [2015-12-30]
   - State "TODO"       from ""           [2016-01-04 Mon 10:20]
#+BEGIN_SRC emacs-lisp
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; @magit, [2015-12-30]
  ; http://magit.vc/manual/magit/
  ; @make @err: *** At least version 24.4 of Emacs is required.  Stop.
   (add-to-list 'load-path (concat path-to "magit-master/lisp/"))
  ;  (require 'magit)
  ;; (with-eval-after-load 'info
  ;;   (info-initialize)
  ;;   (add-to-list 'Info-directory-list
  ;;                (concat path-to "/Documentation/")))
  
#+END_SRC
** @eldoc [2015-12-30]
#+BEGIN_SRC emacs-lisp :tangle yes 
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; @eldoc [2015-12-30]
  (add-hook 'emacs-lisp-mode-hook 'turn-on-eldoc-mode)
  (add-hook 'lisp-interaction-mode-hook 'turn-on-eldoc-mode)
  (add-hook 'ielm-mode-hook 'turn-on-eldoc-mode)
  ; org-eldoc, @ln: https://bitbucket.org/ukaszg/org-eldoc
  ; org-eldoc is part of org-mode contrib repository
  ; \gitlib\orglib\emacslib\org-mode-master\contrib\lisp
  ; (setq org-contrib-dir (expand-file-name "lisp" (expand-file-name "contrib" org-dir)))
  ; (setq org-contrib-dir (expand-file-name "lisp" (expand-file-name "contrib" org-dir)))
  (add-to-list 'load-path org-contrib-dir)
  (require 'org-eldoc)
  (org-eldoc-load)
  ; (org-eldoc-hook-setup)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
** @anything, @err [2015-12-29]
#+BEGIN_SRC emacs-lisp :tangle no
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; @anything, why not working
  ; @err, can  not open load file anything-config
    ;; (add-to-list 'load-path (concat path-to "anything/")
    ;; (require 'anything-config)
    ;; (setq anything-sources
    ;;       (list anything-c-source-buffers
    ;;         anything-c-source-locate
    ;;             anything-c-source-file-name-history
    ;;             anything-c-source-info-pages
    ;;             anything-c-source-man-pages
    ;;             anything-c-source-file-cache
    ;;             anything-c-source-emacs-commands))
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

** @async emacs-async-master for helm
#+BEGIN_SRC emacs-lisp 
; https://github.com/jwiegley/emacs-async
(add-to-list 'load-path (concat path-to "emacs-async-master/"))
(autoload 'dired-async-mode "dired-async.el" nil t)
(dired-async-mode 1)
#+END_SRC
** @smex [2015-12-25]
#+BEGIN_SRC emacs-lisp :tangle yes
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; https://github.com/nonsequitur/smex
; A smart M-x enhancement for Emacs.  [2015-07-15]
(add-to-list 'load-path (concat path-to "smex-master/"))
(require 'smex) 
; Not needed if you use package.el
(smex-initialize) 
; Can be omitted. This might cause a (minimal) delay
                  ; when Smex is auto-initialized on its first run.

(global-set-key (kbd "M-x") 'smex)
(global-set-key (kbd "M-X") 'smex-major-mode-commands)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
** @linum forcefully, [2013-11-13]
#+BEGIN_SRC emacs-lisp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(add-to-list 'load-path path-to)  
(require 'linum)
(global-linum-mode 1)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
** @git-emac git-emacs, [2015-12-23] / [2014-11-06]
#+BEGIN_SRC emacs-lisp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;  C:\Program Files (x86)\Git [2015-12-23]
;; (add-to-list 'load-path (concat path-to "git-emacs-master/"))
;; ;(add-to-list 'load-path "C:/git-emacs-master")
;; ;(add-to-list 'load-path "C:/Program Files (x86)/git-emacs-master")
;; (if (string-equal system-type "windows-nt")
;; (progn (add-to-list 'exec-path "C:/Program Files (x86)/Git/bin")))
;; ; * @emacs
;; ; (add-to-list 'exec-path "C:/Program Files (x86)/Git/bin")
;; (require 'git-emacs)
;; ; @key, @success, 'exec-path, ctrl-h v check value
;; ; permisson denied, git
;; ; add its path (location) to the value of exec-path.

;; ; ** @git-emacs, defvar, ctrl-h v: git--repository-dir for git-init
;; (setq git--repository-dir git-to)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; highlightï¼hi-line.el,emacs inside, /[2014-11-06]
; (require 'hl-line)  
; (global-hl-line-mode t) 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
** @auctex, REDO [2016-01-07], no use [2015-12-24]
#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; 
  ;; Auctex, REDO [2016-01-07] DONE [2014-10-23]
  (add-to-list 'load-path (concat path-to "site-lisp/site-start.d"))
                                          ; @key: very important, [2014-10-23]
  (load "auctex.el" nil t t)
  (load "preview-latex.el" nil t t)
  (setq TeX-auto-save t)
  (setq TeX-parse-self t)
  (setq-default TeX-master nil)
  (setq preview-scale-function 1.3)
  (setq LaTeX-math-menu-unicode t)
  (setq TeX-insert-braces nil)
  (add-hook 'LaTeX-mode-hook 'LaTeX-math-mode)
  ;; RefTeX with AUCTeX
  ;; reftex, [2014-10-23]
  (setq reftex-plug-into-auctex t)
  (add-hook 'latex-mode-hook 'turn-on-reftex) 
  (setq reftex-cite-format 'natbib) 


  ;; "XeLaTeX", xetex, REDO [2016-01-07], DONE  [2014-11-03]
  (setq TeX-PDF-mode t) ; annual, c-c,c-t, c -p, /140318
  (add-hook 'LaTeX-mode-hook (lambda()
                                (add-to-list 'TeX-command-list '("XeLaTeX" "%`xelatex%(mode)%' %t" TeX-run-TeX nil t))
                                (setq TeX-command-default "XeLaTeX")
                                   (setq TeX-save-query  nil )
                                    (setq TeX-show-compilation t) 
                                                                 ))
  (setq tex-engine 'xetex)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

** @auto-save, [2014-11-21]

#+BEGIN_SRC emacs-lisp
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(setq auto-save-default t)
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

** @mew, no use
#+BEGIN_SRC emacs-lisp :tangle no
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;; @mew, email, @success, work [2015-12-21]
      ;; load Mew, [2014-11-07]
      (add-to-list 'load-path (concat path-to "mew-lisp"))
      (autoload 'mew "mew" nil t)
      (autoload 'mew-send "mew" nil t)
      (setq mew-icon-directory (concat path-to "mew-lisp/etc"))
      (setq mew-use-cached-passwd t)
      (if (boundp 'read-mail-command)
      (setq read-mail-command 'mew))
      (autoload 'mew-user-agent-compose "mew" nil t)
      (if (boundp 'mail-user-agent)
      (setq mail-user-agent 'mew-user-agent))
      (if (fboundp 'define-mail-user-agent)
      (define-mail-user-agent
      'mew-user-agent
      'mew-user-agent-compose
      'mew-draft-send-message
      'mew-draft-kill
      'mew-send-hook))
      (setq mew-pop-size 0)
      (setq mew-smtp-auth-list nil)
      (setq toolbar-mail-reader 'Mew)
      (set-default 'mew-decode-quoted 't)
      (when (boundp 'utf-translate-cjk)
      (setq utf-translate-cjk t)
      (custom-set-variables
      '(utf-translate-cjk t)))
      (if (fboundp 'utf-translate-cjk-mode)
      (utf-translate-cjk-mode 1))
      (setq mew-config-alist '(
      ("default"
      ("name" . "xiaoanhuang")
      ("user" . "xiaoanhuang")
      ("smtp-server" . "smtp.163.com")
      ("smtp-port" . "25")
      ("pop-server" . "pop3.163.com")
      ("pop-port" . "110")
      ("smtp-user" . "xiaoanhuang")
      ("pop-user" . "xiaoanhuang")
      ("mail-domain" . "163.com")
      ("mailbox-type" . pop)
      ("pop-auth" . pass)
      ("smtp-auth-list" . ("PLAIN" "LOGIN" "CRAM-MD5"))
      )
      ))
      (setq mew-ssl-verify-level 0)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

** COMMENT @predictive, REDO [2016-01-18]; memory consuming [2014-11-04]
#+BEGIN_SRC emacs-lisp :tangle no
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; predictive install location
    (add-to-list 'load-path (concat path-to "predictive"))
         ;; dictionary locations
    (add-to-list 'load-path (concat path-to "predictive/latex/"))
    (add-to-list 'load-path (concat path-to "predictive/texinfo/"))
     (add-to-list 'load-path (concat path-to "predictive/html/"))
     (autoload 'predictive-mode (concat path-to "predictive/") "Turn on Predictive Completion Mode." t)
    ;    (autoload 'predictive-mode (concat path-to "predictive/" "Turn on Predictive Completion Mode." t))
         ;; load predictive package
     (require 'predictive)
    ;(autoload 'predictive-mode "D:/Emacs14/predictive/predictive" "Turn on Predictive Completion Mode." t)
                                            ; delete predictive,  [2014-11-10]
    ; REDO http://www.emacswiki.org/emacs/PredictiveMode
    (autoload 'predictive-mode "predictive" "predictive" t)
    (set-default 'predictive-auto-add-to-dict t)
    (setq predictive-main-dict 'dict-english
  ; Original value was dict-english, [2016-01-18]
  ; predictive-main-dict 'rpg-dictionary
          predictive-auto-learn t
          predictive-add-to-dict-ask nil
          predictive-use-auto-learn-cache nil
          predictive-which-dict t)
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

** @session, REDO [2016-01-07], DONE [2015-12-28]
#+BEGIN_SRC emacs-lisp :tangle yes
  (add-to-list 'load-path path-to)
  (require 'session)
  ;; load session
  (add-hook 'after-init-hook 'session-initialize) 
  ;;  initiate session
  (desktop-save-mode 1)
#+END_SRC

** @org all left is org

#+BEGIN_SRC emacs-lisp :tangle yes
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; *** @org-mobile, [2014-12-16]
  ; comment org-mobile-files [2015-12-28]
  ; (setq org-mobile-files (quote ( (concat git-to "HXA.OFDM.PON.org")  (concat git-to "journal.org")  (concat git-to "project.org")  (concat git-to "task.org")  (concat git-to "note.org") )))
  ; (setq org-mobile-index-file "D:/GTD18/inbox.org")
  ; (setq org-mobile-index-file "inbox.org")
  ; (setq org-mobile-inbox-for-pull "D:/GTD18/fromMobile.org")
  ; (setq org-mobile-inbox-for-pull "D:/GTD18/inbox.org")

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; *** @org-capture, / [2014-11-27]
  (setq org-capture-templates '(
  ("t" "Task" entry (file+headline (concat git-to "task.org") "Tasks") "* TODO %?\n %i\n %a")
  ("j" "Journal" entry (file+datetree (concat git-to "journal.org")) "* %?\nEntered on %U\n %i\n %a")
  ("n" "Note" entry (file+datetree (concat git-to "note.org") ) "* %?\nEntered on %U\n %i\n %a")
  ("p" "Project" entry (file+datetree (concat git-to "project.org") ) "* %?\nEntered on %U\n %i\n %a")
  ))
  ; M-x org-capture-import-remember-templates RET

  ; (define-key global-map "\C-cc" âorg-capture)
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ; *** @org-remember, [2014-11-19]
  (define-key global-map "\C-cr" 'org-remember)

  ; (org-remember-insinuate)
  ; must add remember-mode-hook, /141119
    (setq remember-annotation-functions '(org-remember-annotation))
    (setq remember-handler-functions '(org-remember-handler))
    (add-hook 'remember-mode-hook 'org-remember-apply-template)

  ; (setq org-directory (concat git-to "/") 
  (setq org-remember-templates '(("New" ?n "* %? %t \n %i\n %a" (concat git-to "inbox.org") ) ("Task" ?t "** TODO %?\n %i\n %a" (concat git-to "task.org") "Tasks") ("Calendar" ?c "** TODO %?\n %i\n %a" (concat git-to "task.org") "Tasks") ("Idea" ?i "** %?\n %i\n %a" (concat git-to "task.org") "Ideas") ("Note" ?r "* %?\n %i\n %a" (concat git-to "note.org") ) ("Project" ?p "** %?\n %i\n %a" (concat git-to "project.org") %g)  ("Journal" ?j "* %?\n %i\n %a" (concat git-to "journal.org") )  )) 

  ; (setq org-directory git-to) 
  ; (setq org-directory "D:/GTD18/") 
  (setq org-default-notes-file (concat git-to "inbox.org"))  ; [2015-12-30]
  ; (setq org-default-notes-file (concat org-directory "inbox.org"))
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

#+BEGIN_SRC emacs-lisp :tangle no
  ; *** @org-setting, [2014-11-19]
  (setq org-tag-alist '(("@Fit" . ?f) ("@huang" . ?h) ("@home" . ?m) ("@Lang" . ?l) ("@Basic" . ?b) ("@Emacs" . ?e) ("@paper" . ?p) ("@work" . ?w)   ("@DOCSIS" . ?d) ("@Meeting" . ?M) ("@Famous" .?F)))
  
  ;; priority setting, [2014-11-19] 
  ; lowest can not be D, must E, /141119
  (setq org-highest-priority ?A)
  (setq org-lowest-priority  ?E)
  (setq org-default-priority ?E)

  ; *** @org-todo, [2014-11-19]
  (setq org-todo-keywords
    '((type "Work(w!)" "Huang(h!)" "|")
  ;    (type "Work(w!)" "Huang(h!)" "Study(s!)" "|")
      (sequence "PENDING(p!)" "TODO(t!)"  "|" "DONE(d!)" "ABORT(a@/!)")
  ))
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

#+END_SRC

#+BEGIN_SRC emacs-lisp :tangle no
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  ; *** @org-face, [2014-11-19]
  (setq org-todo-keyword-faces
    '(("Work" .      (:background "red" :foreground "white" :weight bold))
  ;    ("Study" .      (:background "white" :foreground "red" :weight bold))
  ; <x-bg-color>, background can not be White, <2014-12-23>
  ;    ("Study" .      (:background "gray" :foreground "red" :weight bold))
  ;    ("Fun" .      (:foreground "MediumBlue" :weight bold)) 
      
      ("Huang" .      (:background "red" :foreground "orange" :weight bold)) 
      ("PENDING" .   (:background "LightGreen" :foreground "gray" :weight bold))
      ("TODO" .      (:background "DarkOrange" :foreground "black" :weight bold))
      ("DONE" .      (:background "azure" :foreground "Darkgreen" :weight bold)) 
      ("ABORT" .     (:background "gray" :foreground "black"))
  ))
   
  ;; org face 
  (setq org-priority-faces
    '((?A . (:background "red" :foreground "white" :weight bold))
      (?B . (:background "DarkOrange" :foreground "white" :weight bold))
      (?C . (:background "yellow" :foreground "DarkGreen" :weight bold))
      (?D . (:background "DodgerBlue" :foreground "black" :weight bold))
      (?E . (:background "SkyBlue" :foreground "black" :weight bold))
  ))
#+END_SRC

#+BEGIN_SRC emacs-lisp :tangle yes
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; ** DONE @bib
    ; http://blog.waterlin.org/articles/bind-emacs-org-mode-with-bibtex.html
    ; (concat path-to "bib1307.bib")
    (setq reftex-default-bibliography
          (list
           (concat path-to "bib1307.bib")  (concat path-to "bib1410.bib")   (concat path-to"bib1506.bib")  (concat path-to"bib1505.bib")  )) ; @success, list [2015-12-30]
    
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;   
    ;; *** @bib: @auto: @org-mode-reftex-setup, "C-c (",  RefTeX, [2015-12-30]
    ; @key, @redo, first setq org-link-abbrev-alist [2015-12-30]
    ; @key: missing ), @org-mode-reftex-setup, [2015-12-30]
    
    ; (concat git-to "notes.org")
    ; D:/gitlib/orglib/emacslib
    ;;  org-mode reftex, [2015-01-27]
    ;; @ln: https://wiki.freebsdchina.org/doc/r/reference
    ;; define org-mode-reftex-search
    
    (defun org-mode-reftex-search ()
     ;; jump to the notes for the paper pointed to at from reftex search
     (interactive)
     (org-open-link-from-string (format "[[notes:%s]]" (reftex-citation t))))
    
    ; @org-link, [2015-12-30]
    ; replace D: to /Volumes/xiaoanh
    (cond 
    ((string-equal system-type "darwin")
    (setq org-link-abbrev-alist
     '(("bib" . "/Volumes/xiaoanh/gitlib/emacslib/bib1410.bib::%s, /Volumes/xiaoanh/gitlib/emacslib/bib1505.bib::%s, /Volumes/xiaoanh/gitlib/emacslib/bib1506.bib::%s")
       ("notes" .  "/Volumes/xiaoanh/gitlib/emacslib/bib_notes.org::%s")
       ("figs" . "/Volumes/xiaoanh/figure1411/%s.png")
    ;   ("papers" . "D:/bib1410/paper1410/%s.pdf")
       ("papers" . "/Volumes/xiaoanh/bitlib/orglib/paper1512/%s.pdf"))))
    
    ((string-equal system-type "windows-nt")
    (setq org-link-abbrev-alist
     '(("bib" . "D:/gitlib/emacslib/bib1410.bib::%s, D:/gitlib/emacslib/bib1505.bib::%s, D:/gitlib/emacslib/bib1506.bib::%s")
       ("notes" .  "D:/gitlib/emacslib/bib_notes.org::%s")
    ;   ("notes" . "(concat git-to "notes.org") ::%s")
    ;  (invalid-read-syntax ". in wrong context")
    ;    ("notes" . (concat git-to "notes.org::%s")
       ("figs" . "D:/figure1411/%s.png")
    ;   ("papers" . "D:/bib1410/paper1410/%s.pdf")
       ("papers" . "D:/bitlib/orglib/paper1512/%s.pdf")))))
    
    (defun org-mode-reftex-setup ()
      (load-library "reftex")
      (and (buffer-file-name) (file-exists-p (buffer-file-name))
           (progn
        ;; enable auto-revert-mode to update reftex when bibtex file changes on disk
        (global-auto-revert-mode t)
        (reftex-parse-all)
        ;; add a custom reftex cite format to insert links
        (reftex-set-cite-format
          '((?b . "[[bib:%l][%l-bib]]")
            (?c . "\\cite{%l}")
            (?n . "[[notes:%l][%l-notes]]")
            (?p . "[[papers:%l][%l-paper]]")
            (?f . "[[figs:%l][%l-fig]]")
            (?t . "%t")
            (?h . "** %t\n:PROPERTIES:\n:Custom_ID: %l\n:END:\n[[papers:%l][%l-paper]]"))))))
    (define-key global-map (kbd "C-c )") 'reftex-citation)
    (define-key global-map (kbd "C-c (") 'org-mode-reftex-search)
  ;  (define-key org-mode-map (kbd "C-c )") 'reftex-citation) ; @success, list [2015-12-30]
      ;; binding of  âC-c (â to org-mode-reftex-search
  ;  (define-key org-mode-map (kbd "C-c (") 'org-mode-reftex-search)
    (add-hook 'org-mode-hook 'org-mode-reftex-setup)
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

** @org-present
*** org-html5presentation.el-master
    1. @err: no such file org-exp.el
#+BEGIN_SRC emacs-lisp :tangle no
  (add-to-list 'load-path (concat org-dir "/org-html5presentation.el-master"))
  (require 'org-html5presentation)
#+END_SRC
*** Org-Reveal, [2016-01-27]
    1. ç®åæè§org-revealè¿æ¯æå¥½çæ¹æ¡
    2. require Reveal.js
    3. http://jr0cket.co.uk/slides/revealjs.html
       1. Copy ox-reveal.el to the Org-mode installation directory.
       2. @err: Wrong number of arguments: #[(checkbox),
          org-html-checkbox func in ox-html.el
	  1. d:/emacs24.5/share/emacs/24.5/lisp/org/ox-html.elc" 
	  2. https://github.com/yjwen/org-reveal/issues/162
#+BEGIN_SRC emacs-lisp :tangle yes
                                          ; org-mode-master\lisp, [2016-01-27]
  (add-to-list 'load-path (concat org-dir "/org-reveal-master"))
  (require 'ox-reveal)
  (setq org-reveal-root (concat "file:///" org-dir "/reveal.js"))
                                          ; To load Org-reveal, type âM-x load-libraryâ, then type âox-revealâ.
                                          ; Now you can export this manual into Reveal.js presentation by typing âC-c C-e R Râ.


#+END_SRC
*** Epresent REDO [2016-01-27], [2014-12-10]
    1. https://github.com/eschulte/epresent
#+BEGIN_SRC emacs-lisp :tangle yes
  ; *** Epresent REDO [2016-01-27], [2014-12-10]
  ; Debugger entered--Lisp error: (file-error "Cannot open load file" "ox")  require(ox)
  (add-to-list 'load-path (concat path-to "epresent-master"))
  (require 'epresent)
  ; epresent and reveal fail, due to ox missing and latest org-mode 8.0, [2015-07-07]
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
* @debug [2015-12-28]
** @markdown, 
*** DONE @win: markdownpad, =@PATH=, [2016-01-15]
   1. @PATH: | name: markdown | value:  C:\Program Files
      (x86)\MarkdownPad 2\ |
      1. MarkdownPad2.exe
	 1. properties -> start in 
   2. http://markdownpad.com/download.html

** TODO xiaoanh.github.io [2016-01-12] 
*** @key:  =(org-publish "blog" t) or C-u M-x org-publish= , postamble [2016-01-15]
    1. #+OPTIONS: html-postamble:nil
       1. (setq org-export-html-postamble nil)
    2. =org-info-js=, [2016-01-28]
       1. #+INFOJS_OPT
       2. org-info-js is a great javascript tool to navigate through a HTML page
       3. http://orgmode.org/worg/code/org-info-js/
    3. org-html-themes
       1. https://github.com/fniessen/org-html-themes
    4. @css: =href=, @err: D:/, DONE-WELL, ->css/solarized-light.css, [2016-01-28]
       1. https://github.com/fniessen/org-html-themes
       2. local for css
       3. href="http://thomasf.github.io/solarized-css/solarized-light.min.css"
    5. @err: _Skipping unmodified file d:/gitlib/orglib/orgblog/css/worg.css_
       1. As you discovered yourself, a prefix argument will also force Org to publish all files:
       2. force =(org-publish "blog" t)=
    6. @err: clear version and validate
       1. http://stackoverflow.com/questions/9742836/how-do-i-format-the-postamble-in-html-export-with-org-mode

**** [#C] ä½¿ç¨Emacs org-mode + GitHub Pagesæ¥ååå®¢ [2016-01-15]
       1. http://www.kuqin.com/shuoit/20150804/347399.html
       2. :publishing-function org-html-publish-to-html
       3. :publishing-function - ä½¿ç¨åªä¸ªå½æ°æ¥è¿è¡publishï¼æ³¨ï¼org 7ä¸8å¨è¿ä¸ªå°æ¹æåºå«ï¼
       4. æç®¡å°GitHubä¸
	  1. çæäºHTMLæä»¶ä¹åéè¦æpublic_htmlç®å½æç®¡å°GitHubä¸
**** dirtysalt's homepage
      1. http://dirlt.com/
*** [#C] DONE, @auto, @git, Launch automatic page generator
    1. https://help.github.com/articles/creating-pages-with-the-automatic-generator/
    2. cd xiaoanh.github.io
    3. git init
    4. git config --global user.name xiaoanh
    5. git config --global user.email xiaoanhuang@163.com
    6. git remote add origin https://github.com/xiaoanh/xiaoanh.github.io
    7. git fetch origin
    8. git checkout master
    9. git pull origin master

echo "# xiaoanh.github.io" >> README.md
git init
git add README.md
git commit -m "first commit"
git remote add origin https://github.com/xiaoanh/xiaoanh.github.io.git
git push -u origin master

*** @dir: orgblog and xiaoanh.github.io [2016-01-11]
    1. orgblog
       1. index.org
       2. sitemap.org
       3. css
	  1. worg.css
       4. img
    2. xiaoanh.github.io
       1. @auto
*** [#C] @github.io: =git.io=, https://pages.github.com/, [2016-01-08]
    1. Head over to GitHub and create a new repository named username.github.io
    2. https://github.com/xiaoanh/xiaoanh.github.io
    3. cd username.github.io
       1. echo "Hello World" > index.html
** hs, =M-x hs-minor-mode=, [2016-01-08]
   1. C-c @ C-c
** @org-publish, @org, @org-protocol
*** @org-protocol, [2016-02-03]
    1. http://orgmode.org/worg/org-contrib/org-protocol.html#orgheadline5
    2. [emacs] ä¸ºä»ä¹è¯´org-modeæ¯ä¸ªç¥å¨
       1. http://bamanzi3.blogspot.fr/2012/05/emacs-org-mode.html

*** [#C] @key: @org, current is v8.3.2, =keepaspectratio and height=, [2016-02-02]
    1. @err: =D:-> //D:=, Full path figure export to LaTeX error in org-mode in Windows 7
       1. http://emacs.stackexchange.com/questions/7779/full-path-figure-export-to-latex-error-in-org-mode-in-windows-7
    2. #+ATTR_LaTeX: :align "centering" :width 0.9\textwidth :height 0.9\textheight :options keepaspectratio
    3. no commented line before figure
    4. #+OPTIONS: H:2, not +BEAMER_FRAME_LEVEL: 2,  otherwise, no frame
*** @org, @update, 8.3.2->8.3.3, both in origin and emacslib, [2016-01-28], =not download from orgmode.org=
    1. void-function org-export-file-uri when Updated to 8.3.3
       1. @err: even html no output
    2. origin: D:\emacs24.5\share\emacs\24.5\lisp\org
    3. @err: http://orgmode.org/, =not download from orgmode.org=
    4. DONE-WELL http://orgmode.org/elpa/ and origin emacs-24.5-bin-i686-mingw32
       1. org-20160125, working
       2. but org-contrib-dir not working, org-plus-contrib-20160125
*** DONE-WELL  @css, =href, HTML_HEAD=, (#+STYLE: changed to #+HTML_HEAD: in org-mode 8.0), [2016-01-28]
    1. http://thomasf.github.io/solarized-css/
#+INFOJS_OPT: view:t toc:t ltoc:t mouse:underline buttons:0 path:http://thomasf.github.io/solarized-css/org-info.min.js
#+HTML_HEAD: <link rel="stylesheet" type="text/css" href="http://thomasf.github.io/solarized-css/solarized-light.min.css" />

*** ssh: https://github.com/xiaoanh/xiaoanh.github.io.git [2016-01-12]
    1. from https://github.com/xiaoanh/xiaoanh.github.io
    2. git clone https://github.com/xiaoanh/xiaoanh.github.io
*** @css: å¦å¤ç´æ¥å·æç¨äº worg ç css 
      1. ; http://dayigu.github.io/WhyUseOrgModeToWriteBlog.html
*** DONE @err:  org-publish-org-to-html is void [2016-01-08]
    1. replace to =org-html-publish-to-html=
    2. replace to =(require 'ox-publish)=
** @mew
   1. Mew(Messaging in the Emacs World)

** @w3m
   1. @w3m, ç¼è¯æåä»¥åä¼åç°emacs-w3må®è£å¨/Applications/Emacs.app/Contents/share/emacs/site-lisp/w3mè·¯å¾ä¸

** @eldoc @update org
   1. @src, replace D:\emacs24.5\share\emacs\24.5\lisp\org
      1. m-x org-version -> old is v8.2.10, so replace
      2. m-x org-version, ->8.3.2

** [#C] org-babel-load-file kbd+lambda, C-c C-v t
*** DONE @key, m-x org-babel-tangle [2016-01-05]
    1. @auto dotemacsw.el
    2. It is bound to C-c C-v t, C-c C-v C-t.
    3. buffer is not associated with any file changed on disk really edit hanged on disk; really edit the buffer? (y, n, r 
*** recursive @err 
    1. kbd+lambda: Emacs init file written in org-mode
       1. http://mescal.imag.fr/membres/arnaud.legrand/misc/init.php
       2. Load emacs initialization file:
    2. @err: Buffer does not seem to be associated with any file [2016-01-05]
    3. defun also fail
** @err: variable is void: org-mode-map
   1. Symbol's value as variable is void: org-mode-map [2016-01-04]
      1. to global-map
** TODO open pdf in helm-bibtex
*** helm-bibtex-pdf-open-function
#+BEGIN_SRC emacs-lisp :tangle no
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; https://github.com/tmalsburg/helm-bibtex
    ; @mac, helm-bibtex-pdf-open-function
    ; m-x getenv | setenv | eval-expression 
    ; (defun helm-open-file-with-default-tool) in helm-utils.el
    (cond 
    ((string-equal system-type "darwin" ) ; @mac
    (setq helm-bibtex-pdf-open-function
      (lambda (fpath)
        (start-process "skim" "*skim*" "open" (concat "-a /Applications/Skim.app " fpath))))))
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; https://github.com/tmalsburg/helm-bibtex
    ; @win
    ; emacs  AcroRd32.exe
    ; permission denied open
    ; C:\Program Files (x86)\Adobe\Acrobat Reader DC\Reader\AcroRd32.exe 
  ;;   (setq local-pdf-viewer
  ;;         (cond
  ;;          ((eq 'windows-nt system-type)
  ;;           "/c/Program\\ Files\\ \\(x86\\)/Adobe/Acrobat \\ Reader \\ DC /Reader/AcroRd32.exe")
  ;; ;          "/cygdrive/c/Program\\ Files\\ \\(x86\\)/Adobe/Reader\\ 10.0/Reader/AcroRd32.exe")
  ;;          ((eq 'gnu/linux system-type) "okular")
  ;;          ((eq 'darwin system-type) "open")))
    
    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC

*** Permission denied (open)
*** exec-path
    1. (add-to-list 'exec-path "C:/Program Files (x86)/Adobe/Acrobat Reader DC/Reader/")
*** setq local-pdf-viewer
    1. not work
*** @success, aspell
(if (string-equal system-type "windows-nt")
(setq-default ispell-program-name "aspell"))

** DONE @anything, @helm [2015-12-29]
   CLOSED: [2015-12-30 Wed 09:50]
   - State "DONE"       from "TODO"       [2015-12-30 Wed 09:50]

*** @kbd, =*org and /gitlib=  [2016-01-11]
    1. in-depth usage
*** DONE [#C] @key, @helm can work in @win, just copy from @mac 
    1. @success, run make @mac, then upload to github, download to @win, then work
    2. can not load anything-config, [2015-12-30]
    3. can not load helm-autoloads, @win

** TODO @helm-bibtex
*** @ac, first ispell, then ac-ispell [2015-12-28]
*** @ac, @lisp: and ;; @mac, [2015-12-28]
(if (string-equal system-type "darwin")
(and (setq ispell-program-name "/usr/local/bin/ispell") (setq-default ispell-program-name "/usr/local/bin/aspell")))
*** (setq helm-bibtex-bibliography (list (concat path-to "bib1410.bib") (concat path-to "bib1505.bib") (concat path-to "bib1506.bib") ))
;    (setq helm-bibtex-bibliography '( (concat path-to "bib1410.bib") (concat path-to "bib1505.bib") (concat path-to "bib1506.bib") ))
*** can't find dash, dash should be first before s [2015-12-28]
*** bib1410->gitlib/orglib [2015-12-28]
    1. ; helm-bibtex, bitlib->gitlib [2015-12-28]
    2. bitlib->gitlib
    3. (setq helm-bibtex-library-path "D:/bitlib/orglib/paper1512/" )
** @org
*** org-mode-reftex, (?f . "[[figs:%l][%l-fig]]")
*** TODO (setq org-link-abbrev-alist
    1. concat
*** [#C] quote to list '(org-agenda-files (list (concat git-to "paper.org") [2015-12-28]
    1. '(org-agenda-files (list (concat git-to "paper.org") (concat git-to "study.org") (concat git-to "journal.org") (concat git-to "project.org") (concat git-to "task.org") (concat git-to  "note.org")))
    2. '(org-agenda-files (quote (concat git-to, is wrong

*** DONE setq org-remember-templates
*** DONE setq org-capture-templates 
*** concat git-to "task.org" [2015-12-28]
*** @comment org-mobile-files [2015-12-28]
    1. (setq org-mobile-files (quote ( (concat git-to "HXA.OFDM.PON.org")  (concat git-to "journal.org")  (concat git-to "project.org")  (concat git-to "task.org")  (concat git-to "note.org") )))
** @debug: @other
*** (number-or-marker-p OBJECT) 
    1. Return t if OBJECT is a number or a marker.
*** add @session [2015-12-28]
    1. http://emacs-session.sourceforge.net
    2. load session error
*** DONE custom-set-variables
    1. org-agenda-files

* @study: @dotemacs
** @latex: includepdf, merge, angle [2016-02-19]
   1. \includepdf[landscape=true, angle=90, pages=-]{2016021702.pdf}
** @yas, Shulei Zhuæemacs org-modeç¨çå¤ªç¥äºï¼
   1. yas/choose-value å¯ä»¥æå®
   2. ä¸ç¥éå¼å¤´ #+BEAMER_FRAME_LEVEL: ééè¿ä¸æèåéæ©æ¯æä¹æçï¼yasnippetè½å®ç°

** Microsoft Project, org-taskJuggler, [2016-02-01 Mon]
*** emacs gantt chart
    1. A Gantt chart created using Microsoft Project (MSP)
*** TaskJuggler
    1. Project Management beyond Gantt Chart Drawing
*** Etask
    1. Emacs Major Mode for (Project) Task Management and Gantt Charts
** C-c a L, (org-timeline), timeline
   1. milestone or roadmap
   2. Helm Projectile
   3. TaskJuggler
      1. http://orgmode.org/worg/org-tutorials/org-taskjuggler.html
** Emacspeak --The Complete Audio Desktop
   1. http://www.cs.cornell.edu/home/raman/emacspeak/
** @spacemacs
*** redguardtoo/mastering-emacs-in-one-year-guide [2016-01-19]
   2. Sylvain Bennerâs spacemacs (Spacemacsæ¯éå¯¹Vimç¨æ·ä¼åçï¼æä»¥éVimç¨æ·ä¸ç¨è¯äº)
** @ln [2016-01-15]
*** internal links, [[target]], =FIRST <<TARGET>>, THEN CITE [[TARGET][]]=
    1. #<<target>>
       1. C-c C-o, C-c &
    2. @key: first <<PUBS>>, then _[[PUBS][PUBLICATIONS]]_
** @orglib @update =../=
*** @lisp:  (expand-file-name ".." path-to)
  ; (expand-file-name ".." path-to)
  (setq initial-user-file (concat (expand-file-name ".." path-to) "dotemacsw.el"))
*** @win =c:/Users/xiaoanh/AppData/Roaming/.emacs=
    1. @key: -> (load-file "D:/gitlib/dotemacsw.el"), [2016-01-18]
    2. (load-file "D:/gitlib/orglib/dotemacsw.el")
** @org, org_manual.pdf
*** 14 Working with source code, pp192
    1. #+BEGIN_SRC <language> <switches> <header arguments>
    2. 14.8 Header arguments, pp198
    3. :tangle
    4. :exports
    5. 14.8.2.3 :file
    6. 14.8.2.5 :dir and remote execution
** @cmd: @win
*** @set, @PATH, =name: emacs | value: D:\emacs24.5\bin=
    1. 'emacs' is not recognized as an internal or external command, operable program or batch file.
    2. vivado C:\Xilinx\Vivado\2014.4\bin
    3. D:\emacs24.5\bin;
       c:\programdata\oracle\java\javapath;%systemroot%\system32;%systemroot%;%systemroot%\system32\wbem;%systemroot%\system32\windowspowershell\v1.0\;c:\program
       files\intel\wifi\bin\;c:\program files\common
       files\intel\wirelesscommon\;c:\ctex\userdata\miktex\bin;c:\ctex\miktex\miktex\bin;c:\ctex\ctex\ctex\bin;c:\ctex\ctex\cct\bin;c:\ctex\ctex\ty\bin;c:\ctex\ghostscript\gs9.05\bin;c:\ctex\gsview\gsview;c:\ctex\winedt;C:\Program
       Files\MATLAB\R2009b\runtime\win64;C:\Program
       Files\MATLAB\R2009b\bin;C:\Program Files\SlikSvn\bin;C:\Program
       Files (x86)\Aspell\bin;C:\Program Files\xpdf\bin64;C:\Program
       Files (x86)\git-emacs-master;C:\Program Files\Google\Cloud
       SDK\google-cloud-sdk\bin
    4. SET [variable=[string]]
    5. æä¸è¬é½æ¯ç¨ Alt + Space + E + P è¿ä¸ªä¸è¿ä¸²çæé®æ¥ç²è´´
    6. echo %userprofile%
    7. http://www.jianshu.com/p/b4cf683c25f3
   
*** @win, regedit and rename 
   1. regedit, D:\emacs24.5

** @brew @update[2015-12-31 Thu]
*** @update: @win: @emacs
    1. run addpm.exe
    2. rename C:\Users\xiaoanh\Downloads\Emacs24.3 to C:\Users\xiaoanh\Downloads\Emacs24.3_old
    3. @win, http://mirror.hust.edu.cn/gnu/emacs/, http://mirror.hust.edu.cn/gnu/emacs/windows/
    4. @old is GNU Emacs 24.3.1 (i386-mingw-nt6.1.7601) of 2013-03-18 on MARVIN
    5. windowsä¸ç¼è¾å¨Emacsçå®è£ä¸éç½®
       1. http://www.cnblogs.com/kennyliu/p/3416239.html


*** @cmd: @mac: @update
1. Xiaoan1986$ sudo chown -R $(whoami):admin /usr/local
2. Xiaoan1986$ brew update
3. brew install emacs
4. brew unlink emacs

*** DONE install emacs-24.5
  1. http://ftp.gnu.org/gnu/emacs/
  2. /usr/local/Cellar

XIAOANs-MacBook-Pro:~ Xiaoan1986$ brew update
Already up-to-date.
XIAOANs-MacBook-Pro:~ Xiaoan1986$ brew doctor
Your system is ready to brew.
XIAOANs-MacBook-Pro:~ Xiaoan1986$ brew install emacs-mac

.app bundles were installed.
Run `brew linkapps emacs-mac` to symlink these to /Applications.
==> Summary
ðº  /usr/local/Cellar/emacs-mac/emacs-24.5-z-mac-5.15: 3,936 files, 107.4M, built in 5 minutes 20 seconds
XIAOANs-MacBook-Pro:~ Xiaoan1986$ brew linkapps emacs-mac
Linking /usr/local/opt/emacs-mac/Emacs.app to /Applications.

# ###########################################################
# no update brew and xcode, so @err, 
To have launchd start emacs at login:
  ln -sfv /usr/local/opt/emacs/*.plist ~/Library/LaunchAgents
Then to load emacs now:
  launchctl load ~/Library/LaunchAgents/homebrew.mxcl.emacs.plist
==> Summary
ðº  /usr/local/Cellar/emacs/24.5: 3,915 files, 99.5M

=> /Users/Xiaoan1986/Library/LaunchAgents/homebrew.mxcl.emacs.plist -> /usr/local/opt/emacs/homebrew.mxcl.emacs.plist

** @key: @flymake, @percol and @fasd [2015-12-31]
   1. @percol works only in linux?
*** @percol
    1. https://github.com/mooz/percol
    2. percol-master
*** @flymake
    1. https://github.com/illusori/emacs-flymake
    2. emacs-flymake-master
** TODO eldoc
   - State "TODO"       from ""           [2015-12-30 Wed 09:59]
*** org-eldoc
    1. https://bitbucket.org/ukaszg/org-eldoc
** @ln, [2015-12-29]
*** @sachac: http://sachac.com/
*** @sachac: https://github.com/sachac/, http://sachachua.com/blog/

** @eng, [2015-12-29]
   1. predicate | indicate, lexical-word | tweak-twist
   2. pimp: a man who controls prostitutes
   3. performance-oriented
   4. with no loss of functionality
   5. defer | diminish | backend
   6. goldmine
** org-babel-load-file, @study: #time-less-p, nth and file-attributes#  [2015-12-29]

#+BEGIN_SRC emacs-lisp :tangle no
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ; @ln: http://endlessparentheses.com/init-org-Without-org-mode.html
    ; nth, file-attributes, time-less-p
    ; number-or-marker-p nil
    ; p is predicate, | indicate
  
    ; DEFVAR and DEFPARAMETER introduce global dynamic variables. 
    ;; (setq user-emacs-directory path-to)
    ;; ; (defvar user-emacs-directory path-to)
    ;; (expand-file-name "dotemacsw.org" user-emacs-directory)
    ;; (expand-file-name "dotemacsw.el" path-to)
    ;; (nth 5 (file-attributes init-source-org-file))
    ;; (nth 5 (file-attributes init-source-el-file))
    ;; (time-less-p (nth 5 (file-attributes init-source-org-file)) (nth 5 (file-attributes init-source-el-file)))
    ;; (fboundp 'org-babel-load-file)    
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
#+END_SRC
*** org-babel-load-file, time-less-p,  [2015-12-29]
#+BEGIN_SRC emacs-lisp  :tangle no
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
    ;; (defvar init-source-org-file (expand-file-name "dotemacsw.org" path-to)
    ;;   "The file that our emacs initialization comes form") 
    ;; (defvar init-source-el-file (expand-file-name "dotemacsw.el" path-to)
    ;;   "The file that our emacs initialization is generated into")
    
    ;; (if (file-exists-p init-source-org-file)
    ;;   (if (and (file-exists-p init-source-el-file)
    ;;            (time-less-p (nth 5 (file-attributes init-source-org-file)) (nth 5 (file-attributes init-source-el-file))))
    ;;       (load-file init-source-el-file)
    ;;     (if (fboundp 'org-babel-load-file) 
    ;; ; ' disqus syntax highlighting is lame
    ;;         (org-babel-load-file init-source-org-file)
    ;;       (message "Function not found: org-babel-load-file")
    ;;       (load-file init-source-el-file)))
    ;;   (error "Init org file '%s' missing." init-source-org-file))
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;  
#+END_SRC
* @study: @lisp, from eintr.pdf , 
  1. An Introduction to Programming in Emacs Lisp 
     1. http://www.gnu.org/software/emacs/manual/eintr.html
  2. @ln: http://www.gnu.org/software/emacs/manual/
** @basic
   1. - ç¨ä½âå²æ­âå­ç¬¦ç¨æ¥åéåéãå½æ°ç­åç§°éçå­ï¼wordï¼ï¼è¿æ¯Lispç¼ç¨æ¯ç¨æ³ï¼ç±»ä¼¼CåAdaéçâ_â
** 1 List Processing
*** 1.1 Lisp Lists
**** 1.1.1 Lisp Atoms
#+BEGIN_SRC emacs-lisp :tangle no
'(this list includes "text between quotation marks.")
; => a list
; â(this is a quoted list)
; => @err, not â
'(this is a quoted list)

; (this is an unquoted list)
; => this is not fun, @err
'(this is an unquoted list)
(+ 2 2)
; => 4
'(+ 2 2)
; => (+ 2 2)
#+END_SRC
*** 1.7 Variables
#+BEGIN_SRC emacs-lisp :tangle no
fill-column
; => 70 
; @err, (fill-column)
; => @err, not a fun
(set 'flowers '(rose violet daisy buttercup))
flowers
; 'flowers
; @err, (set flowers '(rose violet daisy buttercup))
(setq flowers '(rose violet daisy buttercup))
; *Backtrace* 
; eval-last-sexp.
; The command means âevaluate last symbolic expressionâ, which is the expression just before your cursor.
#+END_SRC
*** 1.8 Arguments
#+BEGIN_SRC emacs-lisp :tangle noy
(+ 2 fill-column)
; => 72
(concat "The " (number-to-string (+ 2 fill-column)) " red foxes.")
; (+ 2 hello)
; (+ 2 âhello)
; (wrong-type-argument number-or-marker-p hello)
; The âpâ stands for âpredicateâ.

#+END_SRC
*** point [2015-12-31]
#+BEGIN_SRC emacs-lisp :tangle no
(point-min)
(buffer-name)
(goto-char (/ (point-max) 2))
#+END_SRC

** 3 How To Write Function Definitions
*** 3.1 The defun Macro
#+BEGIN_SRC emacs-lisp :tangle no
(defun multiply-by-seven (number) ; Interactive version.
"Multiply NUMBER by seven.")
#+END_SRC
*** 3.3 Make a Function Interactive, m-x
#+BEGIN_SRC emacs-lisp :tangle no
  (defun multiply-by-seven (number) ; Interactive version.
  "Multiply NUMBER by seven."
  (interactive "p")
  (message "The result is %d" (* 7 number)))
  ; p: a âprefixâ, as a number to be passed to the function.
#+END_SRC

*** 3.6 let
#+BEGIN_SRC emacs-lisp :tangle no
;(let varlist body...)
(let ((birch 3)
pine
fir
(oak 'some))
(message
"Here are %d variables with %s, %s, and %s value."
birch pine fir oak))
; => "Here are 3 variables with nil, nil, and some value."
; Here, the varlist is ((birch 3) pine fir (oak âsome)).

#+END_SRC
*** 3.8 Ifâthenâelse Expressions
#+BEGIN_SRC emacs-lisp :tangle no
(if (> 4 5) 
; if-part
(message "4 falsely greater than 5!") 
; then-part
(message "4 is not greater than 5!")) 
; else-part
(if nil
'true
'false)
(if 1
'right
'false)
#+END_SRC
*** 3.10 save-excursion
#+BEGIN_SRC emacs-lisp :tangle no
(message "The result is %d" (* 7 5))
; => 35
(point)
(save-excursion (goto-char (point-min)) (point))
(- (point)
(save-excursion
(goto-char (point-min)) (point)))

(message "We are %d characters into this buffer."
(- (point)
(save-excursion
(goto-char (point-min)) (point))))

#+END_SRC
** 4 A Few BufferâRelated Functions
*** 4.1 Finding More Information, find-tag
    1. M-x compile RET etags *.el RET
    2. M-x compile RET etags.exe  *.el RET  ; @win
*** 4.2 A Simplified beginning-of-buffer Definition, pp62
#+BEGIN_SRC emacs-lisp :tangle  no
(defun simplified-beginning-of-buffer ()
"Move point to the beginning of the buffer; leave mark at previous position."
(interactive)
(push-mark)
(goto-char (point-min)))
#+END_SRC

*** 4.3 The Definition of mark-whole-buffer
#+BEGIN_SRC emacs-lisp :tangle no :exports no
  (push-mark (point))
  (push-mark (point-max) nil t)
#+END_SRC

*** 4.4 The Definition of append-to-buffer in simple.el
#+BEGIN_SRC emacs-lisp :tangle no :exports no
  (defun append-to-buffer (buffer start end)
    "Append to specified buffer the text of the region.
  It is inserted into that buffer before its point.
  When calling from a program, give three arguments:
  BUFFER (or buffer name), START and END.
  START and END specify the portion of the current buffer to be copied."
    (interactive
     (list (read-buffer "Append to buffer: " (other-buffer (current-buffer) t))
           (region-beginning) (region-end)))
    (let* ((oldbuf (current-buffer))
           (append-to (get-buffer-create buffer))
           (windows (get-buffer-window-list append-to t t))
           point)
      (save-excursion
        (with-current-buffer append-to
          (setq point (point))
          (barf-if-buffer-read-only)
          (insert-buffer-substring oldbuf start end)
          (dolist (window windows)
            (when (= (window-point window) point)
              (set-window-point window (point))))))))
   (other-buffer)
   (current-buffer)
   (read-buffer "read" (other-buffer))
  ; PROMP
   (other-buffer (current-buffer) t)
   (region-beginning) 
   (list (read-buffer "Append to buffer: " (other-buffer (current-buffer) t))
           (region-beginning) (region-end))
   (interactive
     (list (read-buffer "Append to buffer: " (other-buffer (current-buffer) t))
           (region-beginning) (region-end)))
#+END_SRC
** 5 A Few More Complex Functions, pp72
*** 5.4 Review
    1. &optional

** 7 car, cdr, cons: Fundamental Functions
*** 7.1 car and cdr
#+BEGIN_SRC emacs-lisp :tangle  no
(car '(rose violet daisy buttercup))
(cdr '(rose violet daisy buttercup))

#+END_SRC

*** 7.2 cons
#+BEGIN_SRC emacs-lisp :tangle  no
; The cons function constructs lists; it is the inverse of car and cdr.
(cons 'buttercup ())
; => (buttercup)
(cons 'daisy '(buttercup))
; => (daisy buttercup)
#+END_SRC

*** 7.4 nth
#+BEGIN_SRC emacs-lisp :tangle  no
(nth 1 '("one" "two" "three"))
#+END_SRC

** 12 Regular Expression Searches

*** 12.4 forward-paragraph: a Goldmine of Functions, let*
    1. The let* expression
#+BEGIN_SRC emacs-lisp :tangle  no
  (let* ((foo 7)
  (bar (* 3 foo)))
  (message "âbarâ is %d." bar))
  ; => âbarâ is 21
  
  ;; (let ((foo 7)
  ;; (bar (* 3 foo)))
  ;; (message "âbarâ is %d." bar))
  ; => void foo
  ; make use of the values to which Emacs set variables in the earlier part of the varlist.
#+END_SRC

** 11 Loops and Recursion
*** 11.1 while
#+BEGIN_SRC emacs-lisp :tangle no :exports none
(setq animals '(gazelle giraffe lion tiger))
(defun print-elements-of-list (list)
"Print each element of LIST on a line of its own."
(while list
(print (car list))
(setq list (cdr list))))
(print-elements-of-list animals)
#+END_SRC

*** 11.2 Save your time: dolist and dotimes, pp132
#+BEGIN_SRC emacs-lisp :tangle no
; dolist automatically shortens the list each time it loopsâtakes the cdr of the listâand binds the car of each shorter version of the list to the first of its arguments.
; The result is returned in value.
; DONE put back in sequence [2016-01-04]
; In addition to while, both dolist and dotimes provide for looping.
(setq animals '(gazelle giraffe lion tiger))
(defun reverse-list-with-while (list)
"Using while, reverse the order of LIST."
(let (value) ; make sure list starts empty
(while list
(setq value (cons (car list) value))
(setq list (cdr list)))
value))
(reverse-list-with-while animals)
(setq animals '(gazelle giraffe lion tiger))
(defun reverse-list-with-dolist (list)
"Using dolist, reverse the order of LIST."
(let (value) ; make sure list starts empty
(dolist (element list value)
(setq value (cons element value)))))
(reverse-list-with-dolist animals)
(let (value) ; otherwise a value is a void variable
(dotimes (number 3 value)
(setq value (cons number value))))
; => (2 1 0)
#+END_SRC

* @study: @eng, @quant, @html @python
** TODO @quant, <2016-01-18 Mon>
   1. æ°æ®ææï¼Data Miningï¼DMï¼
   2. ä¸ªäººçæ³æ¯ä¹°æ¹ >>åæ¹ï¼å¥½å¢é>å¥½å¹³å°
   3. åºæ¬çmatlabæä½åfix income toolboxçåå®¹å§
   4. æ­¢çæ­¢æ + å¿æ
   5. è¸ç®å¤åãè¿ä¸ªå°±æ¯soft skillï¼æè§å¾æ¯ä¸ªè¡ä¸æ³åå¾å¥½ï¼çº¯ç ç©¶ç±»ãæè²ç±»é¤å¤ï¼è¿ä¸ªè½åé½å¾éè¦ã
*** [#C] @note
**** @quant
     1. ä¸åçæååéæä¸ªæ¯å»ï¼é¿å°æ³æ¯èï¼è´å¡æ¯é¢
	1. http://www.swjrzk.com/14269.html
     2. è¯å¸(securities)+å¥å©ï¼ä¸ä»·å®çï¼
     3. è¯å¸æèµåæ
     4. æ¼æ²³æ³¾å¼ååº
**** @sci, çµè¯éæ, åºå¸¦ç®æ³
     1. www.sci-inc.com.cn/
     2. å¬å¸è°æ´ï¼æ²¡æå²ä½äº
**** Business Intelligenceï¼ç®åä¸ºBI
**** @interview
     1. This work was supported by the National Science and Technology Major Project of the Ministry of Science and Technology of China (No. 2015ZX03001021).
     2. AãBä¸¤è¯å¸çæéãæ³¢å¨çãç¸å³ç³»æ°ãè´å¡å¼
     3. ä¸ä»·å®å¾(The Law Of One Price)
     4. è´å¡ç³»æ°åæ äºä¸ªè¡å¯¹å¸åºï¼æå¤§çï¼ååçæææ§ï¼ä¹å°±æ¯ä¸ªè¡ä¸å¤§ççç¸å³æ§æéä¿è¯´çâè¡æ§âã
     5. ä¸¤æ­£æ´æ°M,Nä¹é´çæå¤§å¬å æ°, è¾è½¬ç¸é¤æ³
	1. gcdï¼æ±æå¤§å¬å æ°, lcmï¼æ±æå°å¬åæ°
	2. rNâ2 = qN rNâ1
 function gcd(a, b)
    while b â  0
       t â b
       b â a mod b
       a â t
    return a

**** æ¨¡å¼è¯å«ç®æ³
     1. K-Nearest Neighbor
**** é¢æµç®æ³
     1. æå°äºä¹æ³
     2. çº¿æ§åå½(linear regression)
     3. é»è¾åå½(logistic regression)
	1. é»è¾åå½æ¯çº¿æ§åå½çä¸ç§ï¼çº¿æ§åå½æ¯åå½çä¸ç§
**** @key: =Dr. ZHANG=, Soros, ææºªï¼ =ä¸å®è¦æ±çæ£å¤§é±çå¿ç=, [2016-01-21 Thu]
     1. è±æ¨è·¯éå®¶å´é£
     2. ä¸æ¬¡æ§æ¾åºéå¤æ°å­ï¼1-1001ï¼ å¦ä¸ç©éµè®¾ä¸º1000
     3. æ¹æ³ä¸ï¼æ å¿æ°ç»æ³
     4. ç³è¯·ä¸ä¸ªé¿åº¦ä¸ºn-1ä¸åä¸º'0'ç»æçå­ç¬¦ä¸²ãç¶åä»å¤´éåa[n]æ°ç»ï¼
        åæ¯ä¸ªæ°ç»åç´ a[i]çå¼ï¼å°å¶å¯¹åºçå­ç¬¦ä¸²ä¸­çç¸åºä½ç½®ç½®1ï¼å¦æ
        å·²ç»ç½®è¿1çè¯ï¼é£ä¹è¯¥æ°å°±æ¯éå¤çæ°ãå°±æ¯ç¨ä½å¾æ¥å®ç°çã
     5. è¾å¥æ°å­å¡«å°å¯¹åºä¸æ çåç´ ä¸­å»ï¼é£ä¹åªè¦åç°å·²ç»å¡«è¿çåç´ ï¼å¿
        ç¶å°±æ¯éå¤çåç´ äº

**** @key: =Dr. Ding=, ä¸æèï¼Standford,  precise å·´è²ç¹ï¼Peter Linch, =Soros and for long=, [2016-01-20 Wed]
      1. focus on =ä¸­ä¿¡è¯å¸, æµ·éè¯å¸, å½æ³°åå®=
      2. å¯¹å²åºéï¼Hedge Fundï¼å¯¹å²åºé, =åç©º, hedge=fence=
	 1. Large Personal Stake
	 2. è¿ç¬¬äºä¸ªç¹å¾ï¼å«Infrequent Redemption
	    1. ä¸å¹´åªææå®çå ä¸ªæ¥å­å¯ä»¥æ¤èµï¼ä¹å¯è½ä¸å¹´ä¸åº¦ï¼
	 3. è¿ç¬¬å«ä¸ªç¹å¾ï¼å«Leverage
	 4. å¤§é¨åæåµä¸»è¦æ¯ç¬¬äºåç¬¬å«ç¹å¾å±åä½ç¨å¯¼è´ç
	 5. å¯¹å²âï¼å°±æ¯å¨äº¤æåæèµä¸­ï¼ç¨ä¸å®çææ¬å»âå²æâé£é©ï¼æ¥è·åé£é©è¾ä½ææ é£é©å©æ¶¦ï¼å³æè°âå¥å©â
      3. é«é¢äº¤æï¼è±è¯­ï¼High Frequency Tradingï¼HFTï¼
	 1. ç®åçæ¨¡åå¯ä»¥åªä¾é åºæ¬çä¸åçº¿æ§åå½ï¼èæ´å¤æçä¹å¯åºç¨
            å°åå¼è®ºãæ¨¡å¼è¯å«ãé¢æµç®æ³ãç¥ç»ç½ç»åéä¼ ç®æ³ä¹å·²è¢«ç¨æ¥
            å®ç°è¿äºæ¨¡åã
      4. =ä¹æ²»Â·ç´¢ç½æ¯= ï¼George Sorosï¼, *soros fund*
	 1. ä¹æ²»Â·ç´¢ç½æ¯ï¼èåçè´§å¸ææºå®¶ï¼è¡ç¥¨æèµèï¼æåå®¶åæ¿æ²»è¡å¨ä¸»ä¹
	    åå­ï¼æ¾ç»æè´¥è±å½å¤®è¡åâå¶é âäºæ´²éèå±æºçéèå¤§é³
	 2. ä½ æ­£ç¡®æéè¯¯å¹¶ä¸æ¯æéè¦çï¼æéè¦çæ¯ä½ æ­£ç¡®çæ¶åè½èµå¤å°é±ãéè¯¯çæ¶åä¼äºå¤å°é±ãâ
	    1. å¯¹äºä¸ä¸ªæèµèæéè¦çäºæ¯âæ­£ç¡®æ§çéçº§âï¼èä¸æ¯âæ­£ç¡®çé¢çâæå¤é«ã
**** @bookï¼ Quant_2012æèªç»è®¡å­¦ä¹ æ¹æ³
     1. æç¥æºï¼ çº¿æ§åç±»ï¼æ¯ä¸ä¸ªå¤å«æ¨¡åï¼w*x+y=b
**** @cv, @patent: 818074, EIF155097, å­¦å£«å­¦ä½->ç¡å£«å­¦ä½, =å½å®¶éå¤§ä¸é¡¹æµ¦æ±äººæè®¡å=
     1. æµ¦æ±äººæè®¡å
	1. http://www.stcsm.gov.cn/wsbs/kyjgkt/pjrc/xgtz/343281.htm
 
**** @uqer, @pass Ansel1986 | @pass: usual, 
     1. https://uqer.io/help/faq/
     2. ä¼ç¿âéèéåå®éªå®¤, http://q.datayes.com/

***** éååæå¸çPythonæ¥è®°, @python
      1. http://bbs.pinggu.org/thread-3753704-1-1.html
      2. pandas: series and dataframe (index)
	 1. Series æ¯1-Dçï¼DataFrameæ¯2-Dç
      3. D9: äºåæ ç®æ³
	 1. äºåæ ï¼è±è¯­ï¼Binary treeï¼æ¯æ¯ä¸ªèç¹æå¤æä¸¤ä¸ªå­æ çæ ç»æ

**** éåç­ç¥ç ç©¶è¿ç¨ how to write
     1. å¨è´å°å®éªå®¤æä»»ç ç©¶ç§å­¦å®¶æé´ï¼ä¸ºæ»¡è¶³æªæ¥5Gé«å¯åº¦åé«å®¹éçé
       	æ±ï¼é¦æ¬¡æåºäºæ°é¢çäº¤ç»ä¿¡éèåç®æ³ (_11åå®¹éæåä¸ææ¬éä½
       	30%_)ï¼åºäºç°å­çæ¹æ¡ä¸è½æ»¡è¶³æªæ¥5Gé«å¯åº¦åé«å®¹éçéæ±ä¸ææ¬è¾é«ï¼æ¬äººéè¿éè¯»å¤§éæç®å¹¶ä¸åäºç§¯æå°è®¨è®ºåäº¤æµï¼æ
       	åºäºä¸ç§æ°é¢çæ¶æãæ­¤æ¶æè®¾è®¡äºä¸ç§æ°çç®æ³ï¼è§£å³äºå®¹éåéç
       	å³é®é®é¢å¹¶éä½äºç¸å³çç¡¬ä»¶ææ¬ãä¸å½éåè¡ç¸æ¯ï¼æ­¤æ¹æ¡ä¸ä»å®¹é
       	å¤§ä¸ºæå11åï¼èä¸ææ¬éäº30%ãè¯¥æ¹æ¡å¾å°äºè´å°å®éªå®¤ç¥åä¸å®¶ç
       	ååè¯å®ï¼å¹¶åè¡¨å¨å½éä¸å©ä¸ã
     2. åºäºä¸è¿°çå·¥ä½ç»åä¸éåç­ç¥ç ç©¶å¾ç¸ä¼¼ï¼æ¬äººå·å¤äºæ¨¡åè®¾è®¡ãç®
       	æ³å®ç°åæ§è½ä¼åç­æ¹é¢çæè½åè½åï¼å¹¶ä¸ååå·å¤å¾å¼ºçç¼ç¨åå­¦ä¹ è½åï¼åä¿¡å¨ä¹åçéåç ç©¶ä¸­å®è½åæ¥èªå·±çä¸ä¸æè½ã
**** èä¸è§å
     1. åå¹´åååé»ç¼èªå·±çéåç ç©¶æè½å¹¶çæç¸å³çéèä¸å¡ï¼åªåä¸ºå¬
       	å¸è·å©
     2. 3å¹´åå¸ææä»»éåç ç©¶çmanagerï¼é¢å¯¼å¢éä¸æ­åè¿
     3. 5å¹´åæä¸ºä¸ççç¥åéåä¸å®¶ï¼æä¸ºå¬å¸çä¸­ååé
*** æè¡å¤§æ°æ®ç ç©¶å
**** bigdata-research @chengdu
     1. http://www.bigdata-research.org/
**** NECä¸­å½ç ç©¶é¢ãå¤§æ°æ®ç ç©¶åã, å·¥ä½å°ç¹ï¼åäº¬ 
     1. NECä¸­å½ç ç©¶é¢ ãå¤§æ°æ®ç ç©¶å-HDM2015ã
     2. åäº¬å¸ã»ä¸­é¢æã«ãNECä¸­å½ç ç©¶é¢ããè¨­ç«ã
     3. @shanghai
     4. http://www4.newsmth.net/nForum/#!article/Career_PHD/224395?p=1
**** ãå¨èãSAP Labs CHINAæèï¼åå£«ä¼åï¼, å¤§æ°æ®ç§å­¦å®¶/ç ç©¶å, [2016-02-16]
     1. http://www.yingjiesheng.com/job-002-163-940.html
     2. SAP(è¿æ¯ä¸å®¶å¾·å½å¬å¸ï¼ä»äºæ°æ®å¤çç³»ç»åºç¨åäº§åå¼å)
     3. SAPä¸­å½ç ç©¶é¢:æ¨æè·¯1001å·(è¿éç§è·¯
**** æè¡å¤§æ°æ®ç ç©¶å, [2016-02-16]
     1. æ³æä¸ºæè¡å¤§æ°æ®ç ç©¶åï¼èµæ·±äººå£«åè¯ä½ åªäºæè½æ¯å¿å¤ç
	1. http://news.efinancialcareers.cn/%E8%81%8C%E5%9C%BA%E5%AE%9D%E5%85%B8/307/
	2. å¨ITæ¹é¢ï¼ Hadoopæ¾ç¶æ¯ä½ å¿é¡»è¦äºè§£çä¸ä¸ªéè¦å·¥å· 
       	   1. Hadoopçåé³æ¯ [hÃ¦du:p]ã
	   2. to replace SQL
	   3. èªè­å¤§æ¸æçé»è²å°è±¡å¹«æââ Hadoop
	3. å¨ç¡¬ä»¶æ¹é¢ï¼å¾éè¦çä¸ç¹æ¯è¦è®°ä½æè¡ä¸åºæ¬å±äº*nixä¸çï¼æ¯å¦Linuxï¼ç­ç­ï¼
	4. è½ç¶åæ ·é«æçPythonåR
**** TODO ééæï¼ç®æ³å·¥ç¨å¸, again [2016-02-16]
     1. https://promo.lu.com/activity-pages/job-20150213/detail_05.html
     2. ééæâä¸­å½å¹³å®éå¢æå
     3. é¶è¡ç³»ï¼ééæï¼ä¸å¸ç³»ï¼å®äººè´·ï¼å½èµç³»ï¼å¼é«è´·ï¼èæéèï¼æ°è¥ç³»ï¼äººäººè´·ï¼ç­å§ï¼é½æ¯ä¸éçï¼
**** datayes
     1. http://www.datayes.com/#/about
      
*** è«æ³°å±±
    1. è«æ³°å±±ï¼ä¸­å½äººæ°å¤§å­¦å­¦å£«ãä¸­å½äººæ°é¶è¡ç ç©¶çé¨ç»æµå­¦ç¡å£«ãåä»»ä¸­å½è¯å¸çç£ç®¡çå§åä¼åºéçç®¡é¨å¯å¤é¿ãåºéçç®¡é¨å¤é¿ãäº¤é¶æ½ç½å¾·åºéç®¡çæéå¬å¸å¯æ»ç»ç
    2. bdfund, http://www.bdfund.com.cn/joinus.aspx
*** bankhr
**** http://www.bankhr.com/so/224107.html
*** @51job, [2016-02-15]
**** ä¸­ä¿¡è¯å¸
     1. éå/ææç ç©¶å
     2. ä¸æµ·-æµ¦ä¸æ°åº
     3. 6000-15000/æä¸­ä¿¡æè´§æéå¬å¸
     4. http://jobs.51job.com/shanghai-pdxq/69658141.html?s=0
**** æ»è¡èµéè¿è¥ä¸­å¿è¡çåé¨éååæå¸, ä¸æµ·-æµ¦ä¸æ°åº, 100000-600000/å¹´, å¹³å®é¶è¡è¡ä»½æéå¬å¸
    1. http://jobs.51job.com/shanghai-pdxq/73140663.html
**** è±æé¶è¡ï¼ä¸­å½ï¼æéå¬å¸ä¸æµ·åè¡ï¼ä¸ªäººé¶è¡
     1. IT Project Manager
     2. ä¸æµ·-æµ¦ä¸æ°åº
     3. 20-30ä¸/å¹´
     4. http://jobs.51job.com/shanghai-pdxq/74686505.html?s=2
**** ä¸æµ·ææè´·éèä¿¡æ¯æå¡æéå¬å¸
     1. http://jobs.51job.com/all/co2718210.html
**** ä¸è±ä¸äº¬æ¥èé¶è¡ï¼ä¸­å½ï¼æéå¬å¸
     1. ITåºç¡æ¶æ, ä¸æµ·-æµ¦ä¸æ°åº
     2. http://jobs.51job.com/shanghai-pdxq/62306735.html
*** ãå¨èãMcKinsey_TMT-Research Analyst
    1.  æéç®åè¯·åå å¾®ä¿¡ï¼fengzh27ï¼å¤æ³¨ï¼å§å å­¦æ ¡ ä¸ä¸ æéèä½ï¼
*** Index Capitalææ°èµæ¬ åæå¸/IRï¼ [2016-02-16]
    1. æèèä½ï¼åæå¸ãå¨èã
    2. å¬å¸æ»é¨ä½äºä¸æµ·
    3. https://bbs.sjtu.edu.cn/bbscon,board,JobInfo,file,M.1455604705.A.html
    4. å·¥ä½å°ç¹ï¼ä¸æµ·è¹å£åºåå·åè·¯
    5. è¯·å°ç®ååè³ hr@indexvc.com
*** ãprefer Juniorãä¸çé¡¶å°æè¡Strategy quant @sjtu
   1. My tel. number is 021-51081455
   2. My email is brandyyang@allegisbn.com
*** ä¸æµ·éèæè´§ä¿¡æ¯ææ¯æéå¬å¸
    1. ä¸æµ·éèæè´§ä¿¡æ¯ææ¯æéå¬å¸ï¼ç®ç§°ï¼ä¸­éæææ¯å¬å¸ï¼
    2. http://www.cffexit.com.cn/static/4000.html
*** ä¸­å½éåæèµç ç©¶é¢
    1. http://www.cqiri.com/
*** [æè]éåç ç©¶å/æèµç»ç, quack2006@163.com
    1. http://www.yingjiesheng.com/job-002-199-088.html
*** PEç§å
**** ç§ååºéç®¡çäººå¬ç¤ºä¿¡æ¯, [2016-02-15]
     1. https://pf.amac.org.cn/open/comNotice/view
     2. efn: http://jobs.cenet.org.cn/list-117-1.html
**** DONE [#C] ä¸æµ·ææºªèµäº§ç®¡çæéå¬å¸,  hr@clearstreamasset.com
     1. ä¸æµ·ææºªèµäº§ç®¡çæéå¬å¸æç«äº2015å¹´ï¼æ³¨åèµæ¬1000ä¸
     2. ä¸æµ·å¸æµ¦ä¸æ°åºæ¨é«åè·¯729å·éå®¶å´ä¸çºªéèå¹¿åº1å·æ¥¼1503å®¤

**** [å¨è] éåäº¤æç³»ç»å¼åé¦å¸­æ¶æå¸/é¦å¸­ææ¯, hf_zhaopin@126.com
     1. ç®ååéè³ hf_zhaopin@126.com
**** DONE [#E] [å¨è]ãè¡ç¥¨éåé¨ãé«çº§ç ç©¶å(æèµç»çå²), éç³, hf_zhaopin@126.com
     1. ç®ååéè³ hf_zhaopin@126.com
     2. æ­å·éç³
     3. æ­å·éç³äºèç½éèæå¡æéå¬å¸
       	1. http://www.precise-investing.com/
     4. ä¸æµ·ç£ç³ï¼ http://www.stonecapital.com.cn/index.jsp
*** ä¸æµ·ç©èç½æéå¬å¸
    1. å¬å¸ä¿¡æ¯ï¼   å½ä¼ / 100-499äºº
    2. å¾åç®æ³
*** [å¨è] å¤æ®ä¸­å½å®éªå®¤ æèæ çº¿éä¿¡ææ¯ç ç©¶å
    1. èç³»æ¹å¼ï¼liurenmao@cn.sharp-world.com
** [#B] æµ¦æ±äººæè®¡å, =æµ¦æ±è®¡åçå­¦äººåèµæ ¼è®¤å®=
*** å³äºåå¸ãä¸æµ·å¸æµ¦æ±äººæè®¡åç®¡çåæ³ãçéç¥, Båæ°, [2016-01-26]
    1. http://www.stcsm.gov.cn/wsbs/kyjgkt/pjrc/zcfg/343280.htm
    2. Aï¼ç§ç å¼åç±»ï¼ãBï¼ä¼ä¸åæ°åä¸ç±»ï¼ãCï¼ç¤¾ä¼ç§å­¦ç±»ï¼ãDï¼ç¹æ®æ¥éç±»ï¼
    3. Aç±»é¡¹ç®èµå©ä»¥é«ç­é¢æ ¡ãç§ç é¢æç­åä½ä¸ºä¾æçèªç¶ç§å­¦åææ¯ç ç©¶ï¼
       Bç±»é¡¹ç®ä¸»è¦èµå©ä»¥ä¼ä¸ä¸ºä¾æçç§æåæ°åä¸ï¼åæ¬åæ°ååä¸ä¸¤ç±»ï¼
       å¶ä¸­åæ°ç±»éå¯¹ä¼ä¸å¼è¿ççå­¦äººåï¼åä¸ç±»éå¯¹èªä¸»ååç§æä¼ä¸ç
       çå­¦äººå

** Hadoop, @bigdata
   1. international science olympians (IMO, IPhO, IChO, IOI, IBO)
   2. International Mathematical Olympiad (IMO)
   3. å³èè§åææææ¯å·²ç»è¢«å¹¿æ³åºç¨äºéèè¡ä¸ä¼ä¸ä¸­ç¨ä»¥é¢æµå®¢æ·çéæ±ï¼åé¶è¡å¨èªå·±çATM æºä¸éè¿æç»å®¢æ·å¯è½æå´è¶£çä¿¡æ¯ä¾ç¨æ·äºè§£å¹¶è·åç¸åºä¿¡æ¯æ¥æ¹åèªèº«çè¥éã
   4. æ°æ®ææåå¤§ç»å¸ç®æ³
*** hadoop
    1. http://www.ppvke.com/Blog/archives/3263

** @vs, c#, [2016-02-26 Fri]
   1. Visual Studioåå«Visual C++ãåè½æ¯Visual C++å¼ºå¤§å¾å¤ãæ¥¼ä¸è¯´å¾å¾æ°å½ï¼å°±æ¯ç±»ä¼¼äºwordåofficeçåºå«
   2. @matlab:  A simple UDP communications application
      1. using Matlab's Java interface.
   3. import java.net.DatagramSocket
   4. socketéè®¯(UDP)User Datagram Protocol
      1. Copy Rx samples from Rx buffer to File buffer
      2. 2304 * kOfdmSymbols
      3. each OFDM symbol is divided into 8 packets
      4. kPacketSize = kPktHeadBytes + kPktBodyBytes;
   5. using System.Net
      1. IPAddressæ¯ipï¼å¦â127.0.0.1â, IPEndPointæ¯ipåç«¯å£å¯¹çç»åï¼å¦â127.0.0.1:80â  

** @python [2016-01-15]
*** @opencv, [2016-03-11 Fri]
    1. OpenCV (Open Source Computer Vision)
    2. å¾åçå°±ä¸ï¼æè§ååæºå¤§çï¼æè§å°±ä¸ä¸æ¯å¤ªå¥½
    3. æè¿çä¸æä¸å°äººå¨è®¨è®ºå¾åå¤ççå°±ä¸æ¹åï¼ä¼¼ä¹å¤§é¨åé½ææ²è§çæåº¦
*** @book: MATLABæ°æ®åæä¸ææå®æ, [2016-02-24]
    1. Python for Data Analysis
    2. æºå¨å­¦ä¹ å®æ
*** PANDAS (Python Data Analysis) library, big data
    1. http://social-metrics.org/analyzing-big-data-with-python-pandas/
*** Installing pandas with Anaconda, [2016-03-10], pycharm
    1. https://docs.continuum.io/anaconda/install
       1. Anaconda, a cross-platform (Linux, Mac OS X, Windows) Python
          distribution for data analytics and scientific computing.
    2. Installing pandas with MinicondaÂ¶
       1. http://pandas.pydata.org/pandas-docs/stable/install.html
    3. Installing from PyPIÂ¶
       1. https://pypi.python.org/pypi/pandas
    4.  Microsoft Visual C++ Compiler for Python 2.7 
       1. å®è£pandasååå® numpyãsixãpytzãdateutil éååå¥ä»¶ï¼sixç³»çµ±å·²å®è£
    5. Pycharmåå»ºãè¿è¡Pythonç¨åº
*** install numpy, elpy, pip
**** NumPyçè¯ï¼å¨IDLEéé¢æ§è¡import numpy
**** @elpy, Elpy is the Emacs Python Development Environment.
      1. https://github.com/jorgenschaefer/elpy
*** Examples, application
#+BEGIN_SRC python :tangle no
#+END_SRC
    1. 25è¡Pythonä»£ç å®æäººè¸è¯å«, opencv, pattern match
    2. å¾åå¤çPIL - Python Image Library
*** ç½ç»ç¬è«ï¼å³Web Spiderï¼æ¯ä¸ä¸ªå¾å½¢è±¡çåå­
*** 10 ç§æºå¨å­¦ä¹ ç®æ³çè¦ç¹ï¼é Python å R ä»£ç ï¼
    1. http://blog.jobbole.com/92021/
*** æºå¨å­¦ä¹ ç®æ³ä¸Pythonå®è·µä¹ï¼ä¸ï¼kè¿é»ï¼KNNï¼ , scikit-learn
    1. http://blog.csdn.net/zouxy09/article/details/16955347
    2. æ°æ®æ¢ç´¢: pandas, statsmodels, matplotlib, numpy, unix
    3. å»ºç«æ¨¡å: scikit-learn, numpy, pandas, scipy
    4. æµè¯æ¨¡å: scikit-learn, matplotlib
*** Python é¢è¯é®é¢
    1. http://xiaocong.github.io/blog/2013/06/16/python-interview-question-and-answer/
** @PCIe
*** Virtex-6 FPGA Integrated Block for PCI Express  UG517
*** PCI Express System Architecture.pdf
    1. https://www.mindshare.com/files/ebooks/PCI%20Express%20System%20Architecture.pdf
*** @note
    1. 3 layer protocol
       1. PHY->DATA->TRANSACTION
    2. root complex (MEMORY) -> switch -> endpoint
*** @book: PCI Experssä½ç³»ç»æå¯¼è¯»
    1. http://blog.sina.com.cn/s/articlelist_1685243084_3_1.html
** @other
*** Tomomi Kasai (æ²³è¥¿ æºç¾, Kasai Tomomi, born November 16, 1991 in Tokyo) 
    1. æ²³è¥¿æºç¾ (@tomoomichan)
    2. naked with a child cupping her breasts
*** æçåå£«èå¬æå£°å°è¯´, æ­é³:å°è¹
** @html, [2016-01-15]
*** @css
    1. @import url
    2. @import was handy to support both
    3. use <link /> instead of @import
    4. CSS æä»¶çåªä½æ¥è¯¢ï¼@media å@import
    5. be tailored to
*** @basic , HTML Basic Tags
    1. http://www.tutorialspoint.com/html/html_overview.htm
    2. @css
       1. http://www.tutorialspoint.com/html/html_style_sheet.htm
#+BEGIN_SRC html
<!DOCTYPE html>
<html>
<head>
<title>This is document title</title>
</head>
<body>
<h1>This is a heading</h1>
<p>Document content goes here.....</p>
</body>
</html>
#+END_SRC

** @eng, [2016-01-15]
   1. =go beyond, tackle challanges=
   2. wrangle, mung
   3. aspect, dunno man, undeniable
   4. chrono
   5. ample
   6. buffalo
   7. =facilitation=
   8. =unanimous, be handy, ProAndCon=
   9. Mnemonic
   10. postamble
   11. Shanghai Theatre Academy
   12. =tomb-sweeping, spring-festival, mid-autumn, dragon-boat=

      
