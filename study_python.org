#+BEGIN_SRC emacs-lisp :tangle yes :reports no
  ; Time-stamp: "xiaoanh 2016/01/12 14:50:46"
#+END_SRC
* @QUANT
** @quanter
*** @CV 
   1. 制作一份100%通过的简历
      1. http://leihuang.org/2014/05/19/MakeResume/
      2. =具体、量化、有说服力，是技术简历特别需要注重的地方=
      3. （-6分）简历有三页以上。
      4. （-2分）在简历中说自己懂Word/Excel。
      5. （-3分）简历的字体太小。
      6. （+12分）简历被LaTeX编译过。
      7. （+2分）有一个个人主页。

   2. 简历用什么工具好，最后大家的结论殊途同归 —— 用MarkDown写，用PDF
      发。这是我难得的看到程序员们的统一啊。（PHP是最好的语言，阿门）
   3. 有一种叫做"STAR法则"的方式，可以帮助我们更好的充实内容
      1. http://www.kancloud.cn/kancloud/a-programmer-prepares/78240
      2. =task | contribute | benifit=
      3. 2006年，我参与了手机XX网发布系统WAPCMS的开发（这部分是大家都
         会写的）。作为核心程序员，我不但完成了网站界面、调度队列的开
         发工作，更提出了高效的组件级缓存系统，通过碎片化缓冲有效的提
         升了系统的渲染效率。（这部分是很多同学忘掉的，要写出你在这个
         项目中具体负责的部分，以及你贡献出来的价值。）在该系统上线后，
         Web前端性能从10QPS提升到200QPS，服务器由10台减少到3台（通过量
         化的数字来增强可信度）。2008年我升任WAPCMS项目负责人，带领一
         个3人小组支持着每天超过2亿的PV（这就是Benefit。你能带给前雇主
         的价值，也就是你能带给新雇主的价值。）。

   4. @md, geekcompany, @deercv
      1. V2EX = way to explore. V2EX 是一个关于分享和探索的地方
	 1. http://www.v2ex.com/t/179299
      2. https://github.com/geekcompany/DeerResume
	 1. 技术博客：http://blog.github.io ( 使用GitHub Host的Big较高 )
      3. https://github.com/geekcompany/ResumeSample
	 1. 发在Github上后挺受欢迎，很快被star了过千次
      4. http://easy.digitcv.com/#/resume

*** Quant 实习申请总结 [2016-01-12]
      1. https://zhaozhichen.wordpress.com/2011/03/20/quant-%E5%AE%9E%E4%B9%A0%E7%94%B3%E8%AF%B7%E6%80%BB%E7%BB%93/
*** 上海宇义投资招聘量化研究员
     1. http://www.yingjiesheng.com/job-002-197-205.html
** @perceptron
perceptron(hardlimitTF,perceptronLF)

** @knn
fitcknn(tbl,ResponseVarName) 

** @markov
hmmgenerate
* @SQL
** @study
#+BEGIN_SRC sql
  SELECT first_name, last_name FROM employees WHERE salary > 100000
  CREATE TABLE CUSTOMERS(
  ID INT NOT NULL,
  NAME VARCHAR (20) NOT NULL,
  AGE INT NOT NULL,
  ADDRESS CHAR (25) ,
  SALARY DECIMAL (18, 2),
  PRIMARY KEY (ID)
  );
#+END_SRC
** @basic
*** @ln: sql_tutorial.pdf
    1. http://www.tutorialspoint.com/sql/sql_tutorial.pdf
*** @ln: 十步完全理解SQL [2016-01-07]
    1. http://blog.jobbole.com/55086/
* @R [2016-01-05]
** @markov
   1. https://www.zhihu.com/question/20962240/answer/33561657

** @R @update
   1. http://mirror.bjtu.edu.cn/cran/
   2. Emacs Speaks Statistics (ESS)
*** @brew @gcc
brew tap homebrew/science
brew install gcc
brew install Caskroom/cask/xquartz
brew install r
** @book: R frequently asked questions or 153 分钟学会R
   1. https://cran.r-project.org/doc/contrib/Liu-FAQ.pdf
** @book: R for Beginners
    1. http://www.biosino.org/R/R-doc/files/R4beg_cn_2.0.pdf
    2. R语言可以看作是由AT&T贝尔实验室所创的S语言发展出的一种方言
    3. R是一种解释型语言，而不是编译语言，也就意味着输入的命令能够直接
       被执行
#+BEGIN_SRC R  :tangle no
name <- "Carmen"; n1 <- 10; n2 <- 100; m <- 0.5
#+END_SRC
** @book: R学习笔记
   1. http://www.cnblogs.com/holbrook/archive/2013/05/03/3056211.html
* @fpga
** @key, Phase-Locked Loop, SPI
*** @ln
    1. [[https://eewiki.net/pages/viewpage.action?pageId=4096096][@ln:@eewiki]]
*** @note
    1. spi(serial peripheral interface)，串行外围设备接口
       1. 最后，SPI接口的一个缺点：没有指定的流控制，没有应答机制确认是否接收到数据
*** Interfacing an ADC to an FPGA through 3-wire SPI 
    1. http://forum.allaboutcircuits.com/threads/interfacing-an-adc-to-an-fpga-through-3-wire-spi.33231/
*** axi_quad_spi v3.2, PG153
    1. SCK, IO0(MOSI), and IO1(MISO) are shared for all slaves and
       masters
    2. SCLK : Serial Clock (output from master).
    3. MOSI : Master Output, Slave Input (output from master).
    4. MISO : Master Input, Slave Output (output from slave).
    5. SS : Slave Select (active low, output from master).

*** @vhdl
    1. http://surf-vhdl.com/how-to-design-spi-controller-in-vhdl/
** @book: 通用IP核详解和设计开发
   1. http://www.yunpans.com/b/1132699864.html
   2. Xilinx系列FPGA芯片IP核详解  [刘东华编著][电子工业出版社]
* @emacs
** @org
*** org-publish, [2016-01-08]
    1. 什么用 org-mode 写 blog
       1. http://dayigu.github.io/WhyUseOrgModeToWriteBlog.html
    2. @worg: Publishing Org-mode files to HTML
       1. http://orgmode.org/worg/org-tutorials/org-publish-html-tutorial.html
    3. org-publish-project-alist
       1. (:property value :property value)
** @git
*** [#C] @note 
**** @key first init [2016-01-08]
       1. git init
       2. git remote add origin https://xiaoanh@bitbucket.org//xiaoanh/
** @markdown [2016-01-08]
*** 使用markdown写ppt
    1. 使用时直接 slideshow test.md 即可将test.md解析成test.html，双击
       打开就是一个ppt，方向键控制播放,F11全屏浏览，very simple.

*** Ctrl-c ctrl-e m [2016-01-08]
    1. C-c C-e void, should invoke
    2. invoke by M-x org-md-export-as-markdown
** @reST
*** basic
    1. 为了写论文，写科技报告，或者写书，推荐reST
    2. reStructuredText 
** [#C] @kbd
*** @hs, hide/show, ctrl-c @ ctrl-c [2016-01-07]
    1. vhdl DONE
    2. verilog TODO
** @diary
*** @set, diary-file
*** @update
    1. https://github.com/cacology/private-diary
    2. Installing GPG
    3. The GNU Privacy Guard
       1. https://gnupg.org/
* [#C] @python and lua [2014-12-18 Thu]
** @key: @Python
*** naming
1) const, CONST
2) args, args
   
*** modules/packages. packages must include _init_

*** python vs cpp
   |                 | python | cpp     |
   |-----------------+--------+---------|
   |                 | option | argv    |
   |                 | _name_ | main    |
   |                 | import | include |
   | domain-域操作符 | ::     | ::      |
** Py study
*** study web
1) naming
    所有其它的标识符（identifiers）都是使用小写，比如：
   words_separated_like_this 。宏 - macros和常量 - constant values是采
   用大写，比如：UPPER_CASE。
   
2) emacs
http://www.johndcook.com/blog/2012/02/09/python-org-mode/
#+begin_src R :tangle no
sqrt(42)
#+end_src
#+begin_src python :tangle no
from math import sqrt
sqrt(42)
#+end_src
#+RESULTS:

** Python tutorial
*** @key: Python2.5Tutorial简体中文版, PDF [2015-01-15 Thu]
 1) http://pan.baidu.com/share/link?shareid=3447562520&uk=1478811291
**** pp46, Ch5, modules
1) module fibo
2) import fibo
3) fibo._name_
4) sec5.3 dir(fibo)
   1) dir(sys)
**** pp91, Ch9, lib
1) os.system
2) os.getcwd
3) os.chdir
4) dir()
5) hep()
6) import shutil
7) file wildcards
   1) glob.glob(’*.py’)
8) 9.3 Command Line Arguments
   1) print sys.argv
9) 9.5 regular expression tools
10) 9.7 Internet Access
    1) import urllib2
    2) import smtplib
**** Ch3 More Control Flow Tools
1) The keyword ‘elif’ is short for ‘else if’,
2) for x in a: ... print x, len(x)
3) range
4) pass
**** Ch4, Data Structures, lists
1) len
2) index
3) insert
4) append
5) set
6) dict is {}, keys is []
   1) tel = {’jack’: 4098, ’sape’: 4139}
   2) tel.keys()
   3) tel.has_key(’guido’)
   4) tel[’guido’] = 4127
7) tuple
   1) t = 12345, 54321, ’hello!’
   2) t[0]
	   
**** Ch8 class
1) It is a mixture of the class mechanisms found in C++ and Modula-3. As
2) 8.3.2 Class Objects
   1) attribute references
      1) class MyClass:, MyClass.i and MyClass.f
   2) instance: x = MyClass()
3) 8.5 Inheritance, derived继承派生
   1) class DerivedClassName(BaseClassName):
   2) c++ *class derived_class_name: public base_class_name;*
4) 8.9 iterator, <2015-01-16 周五>
   1) _iter_
   2) next

**** Ch1 whetting your appetite
     1) Python is just the language for you.
     2) Python is an interpreted language,
     3) Python is extensible:
*** Python学习手册(第3版)-附录
*** tutorial web
**** Python语言十分钟快速入门, <2015-01-13 Tue>
     1) http://www.pythondoc.com/pythontutorial3/
http://developer.51cto.com/art/201207/347006.htm
1) [文件类型]
   1) Python的文件类型分为3种，即源代码、字节代码和优化代码
   2) .py, .pyc, .pyo.
2) [对象和类]
   1) python用class保留字来定义一个类，类名的首字符要大写
   2) 一个对象被创建后，包含了三方面的特性，即对象的句柄、属性和方法
      1) class Fruit:  def grow(self):  print “Fruit grow”
3) 函数相关
   1) 包必须含有一个__init__.py文件，它用于标识当前文件夹是一个包
4) 运算符和表达式
   1) python不支持自增运算符和自减运算符。例如i++/i–是错误的，但i+=1是可以的
5) 控制语句
   1) 7 python不支持类似c的for(i=0;i<5;i++)这样的循环语句，但可以借助range模拟：
    for x in range(0,5,2): 

**** Python模块学习——optparse
1) 处理命令行参数
   1) http://www.cnblogs.com/captain_jack/archive/2011/01/11/1933366.html
* @other
** @eng 
*** @eng [2016-01-12]
    1. Pomodoro: tomato
    2. 宽客 (=Quant=)
       1. quant, quantitation, quantity,
    3. townhall
    4. POLarity
    5. =tangle=
    6. =babel=
    7. gist
    8. =streak=
    9. chunk
    10. tweak
    11. neatly organize
    12. maternity/paternity
    13. Stagnant wages

